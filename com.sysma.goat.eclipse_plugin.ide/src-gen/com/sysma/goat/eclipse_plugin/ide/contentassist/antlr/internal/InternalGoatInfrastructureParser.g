/*
 * generated by Xtext 2.12.0
 */
parser grammar InternalGoatInfrastructureParser;

options {
	tokenVocab=InternalGoatInfrastructureLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package com.sysma.goat.eclipse_plugin.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.sysma.goat.eclipse_plugin.services.GoatInfrastructureGrammarAccess;

}
@members {
	private GoatInfrastructureGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("LeftCurlyBracket", "'{'");
		tokenNameToValue.put("RightCurlyBracket", "'}'");
		tokenNameToValue.put("Ring", "'ring'");
		tokenNameToValue.put("Tree", "'tree'");
		tokenNameToValue.put("Nodes", "'nodes'");
		tokenNameToValue.put("Server", "'server'");
		tokenNameToValue.put("Cluster", "'cluster'");
		tokenNameToValue.put("Timeout", "'timeout'");
		tokenNameToValue.put("Mid_assigner", "'mid_assigner'");
		tokenNameToValue.put("Registration", "'registration'");
		tokenNameToValue.put("Singleserver", "'singleserver'");
		tokenNameToValue.put("Message_queue", "'message_queue'");
	}

	public void setGrammarAccess(GoatInfrastructureGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleInfrastructure
entryRuleInfrastructure
:
{ before(grammarAccess.getInfrastructureRule()); }
	 ruleInfrastructure
{ after(grammarAccess.getInfrastructureRule()); } 
	 EOF 
;

// Rule Infrastructure
ruleInfrastructure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInfrastructureAccess().getAlternatives()); }
		(rule__Infrastructure__Alternatives)
		{ after(grammarAccess.getInfrastructureAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleServer
entryRuleSingleServer
:
{ before(grammarAccess.getSingleServerRule()); }
	 ruleSingleServer
{ after(grammarAccess.getSingleServerRule()); } 
	 EOF 
;

// Rule SingleServer
ruleSingleServer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleServerAccess().getUnorderedGroup()); }
		(rule__SingleServer__UnorderedGroup)
		{ after(grammarAccess.getSingleServerAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCluster
entryRuleCluster
:
{ before(grammarAccess.getClusterRule()); }
	 ruleCluster
{ after(grammarAccess.getClusterRule()); } 
	 EOF 
;

// Rule Cluster
ruleCluster 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClusterAccess().getUnorderedGroup()); }
		(rule__Cluster__UnorderedGroup)
		{ after(grammarAccess.getClusterAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRing
entryRuleRing
:
{ before(grammarAccess.getRingRule()); }
	 ruleRing
{ after(grammarAccess.getRingRule()); } 
	 EOF 
;

// Rule Ring
ruleRing 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRingAccess().getUnorderedGroup()); }
		(rule__Ring__UnorderedGroup)
		{ after(grammarAccess.getRingAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTree
entryRuleTree
:
{ before(grammarAccess.getTreeRule()); }
	 ruleTree
{ after(grammarAccess.getTreeRule()); } 
	 EOF 
;

// Rule Tree
ruleTree 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTreeAccess().getUnorderedGroup()); }
		(rule__Tree__UnorderedGroup)
		{ after(grammarAccess.getTreeAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTreeNode
entryRuleTreeNode
:
{ before(grammarAccess.getTreeNodeRule()); }
	 ruleTreeNode
{ after(grammarAccess.getTreeNodeRule()); } 
	 EOF 
;

// Rule TreeNode
ruleTreeNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTreeNodeAccess().getGroup()); }
		(rule__TreeNode__Group__0)
		{ after(grammarAccess.getTreeNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Infrastructure__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfrastructureAccess().getSingleServerParserRuleCall_0()); }
		ruleSingleServer
		{ after(grammarAccess.getInfrastructureAccess().getSingleServerParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInfrastructureAccess().getClusterParserRuleCall_1()); }
		ruleCluster
		{ after(grammarAccess.getInfrastructureAccess().getClusterParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInfrastructureAccess().getRingParserRuleCall_2()); }
		ruleRing
		{ after(grammarAccess.getInfrastructureAccess().getRingParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInfrastructureAccess().getTreeParserRuleCall_3()); }
		ruleTree
		{ after(grammarAccess.getInfrastructureAccess().getTreeParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleServer__Group_0__0__Impl
	rule__SingleServer__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleServerAccess().getSingleserverKeyword_0_0()); }
	Singleserver
	{ after(grammarAccess.getSingleServerAccess().getSingleserverKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleServer__Group_0__1__Impl
	rule__SingleServer__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleServerAccess().getNameAssignment_0_1()); }
	(rule__SingleServer__NameAssignment_0_1)
	{ after(grammarAccess.getSingleServerAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleServer__Group_0__2__Impl
	rule__SingleServer__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleServerAccess().getLeftCurlyBracketKeyword_0_2()); }
	LeftCurlyBracket
	{ after(grammarAccess.getSingleServerAccess().getLeftCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleServer__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleServerAccess().getGroup_0_3()); }
	(rule__SingleServer__Group_0_3__0)
	{ after(grammarAccess.getSingleServerAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleServer__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleServer__Group_0_3__0__Impl
	rule__SingleServer__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleServerAccess().getServerKeyword_0_3_0()); }
	Server
	{ after(grammarAccess.getSingleServerAccess().getServerKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleServer__Group_0_3__1__Impl
	rule__SingleServer__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleServerAccess().getColonKeyword_0_3_1()); }
	Colon
	{ after(grammarAccess.getSingleServerAccess().getColonKeyword_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleServer__Group_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleServerAccess().getServerAssignment_0_3_2()); }
	(rule__SingleServer__ServerAssignment_0_3_2)
	{ after(grammarAccess.getSingleServerAccess().getServerAssignment_0_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleServer__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleServer__Group_1__0__Impl
	rule__SingleServer__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleServerAccess().getGroup_1_0()); }
	(rule__SingleServer__Group_1_0__0)?
	{ after(grammarAccess.getSingleServerAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleServer__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleServerAccess().getRightCurlyBracketKeyword_1_1()); }
	RightCurlyBracket
	{ after(grammarAccess.getSingleServerAccess().getRightCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleServer__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleServer__Group_1_0__0__Impl
	rule__SingleServer__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleServerAccess().getTimeoutKeyword_1_0_0()); }
	Timeout
	{ after(grammarAccess.getSingleServerAccess().getTimeoutKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleServer__Group_1_0__1__Impl
	rule__SingleServer__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleServerAccess().getColonKeyword_1_0_1()); }
	Colon
	{ after(grammarAccess.getSingleServerAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleServer__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleServerAccess().getTimeoutAssignment_1_0_2()); }
	(rule__SingleServer__TimeoutAssignment_1_0_2)
	{ after(grammarAccess.getSingleServerAccess().getTimeoutAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cluster__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_0__0__Impl
	rule__Cluster__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getClusterKeyword_0_0()); }
	Cluster
	{ after(grammarAccess.getClusterAccess().getClusterKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_0__1__Impl
	rule__Cluster__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getNameAssignment_0_1()); }
	(rule__Cluster__NameAssignment_0_1)
	{ after(grammarAccess.getClusterAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_0__2__Impl
	rule__Cluster__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getLeftCurlyBracketKeyword_0_2()); }
	LeftCurlyBracket
	{ after(grammarAccess.getClusterAccess().getLeftCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getGroup_0_3()); }
	(rule__Cluster__Group_0_3__0)
	{ after(grammarAccess.getClusterAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cluster__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_0_3__0__Impl
	rule__Cluster__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getMessage_queueKeyword_0_3_0()); }
	Message_queue
	{ after(grammarAccess.getClusterAccess().getMessage_queueKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_0_3__1__Impl
	rule__Cluster__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getColonKeyword_0_3_1()); }
	Colon
	{ after(grammarAccess.getClusterAccess().getColonKeyword_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getMessage_queueAssignment_0_3_2()); }
	(rule__Cluster__Message_queueAssignment_0_3_2)
	{ after(grammarAccess.getClusterAccess().getMessage_queueAssignment_0_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cluster__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_1__0__Impl
	rule__Cluster__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getRegistrationKeyword_1_0()); }
	Registration
	{ after(grammarAccess.getClusterAccess().getRegistrationKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_1__1__Impl
	rule__Cluster__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getColonKeyword_1_1()); }
	Colon
	{ after(grammarAccess.getClusterAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getRegistrationAssignment_1_2()); }
	(rule__Cluster__RegistrationAssignment_1_2)
	{ after(grammarAccess.getClusterAccess().getRegistrationAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cluster__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_2__0__Impl
	rule__Cluster__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getMid_assignerKeyword_2_0()); }
	Mid_assigner
	{ after(grammarAccess.getClusterAccess().getMid_assignerKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_2__1__Impl
	rule__Cluster__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getColonKeyword_2_1()); }
	Colon
	{ after(grammarAccess.getClusterAccess().getColonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getMid_assignerAssignment_2_2()); }
	(rule__Cluster__Mid_assignerAssignment_2_2)
	{ after(grammarAccess.getClusterAccess().getMid_assignerAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cluster__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_3__0__Impl
	rule__Cluster__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getGroup_3_0()); }
	(rule__Cluster__Group_3_0__0)
	{ after(grammarAccess.getClusterAccess().getGroup_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getRightCurlyBracketKeyword_3_1()); }
	RightCurlyBracket
	{ after(grammarAccess.getClusterAccess().getRightCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cluster__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_3_0__0__Impl
	rule__Cluster__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getNodesKeyword_3_0_0()); }
	Nodes
	{ after(grammarAccess.getClusterAccess().getNodesKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_3_0__1__Impl
	rule__Cluster__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getColonKeyword_3_0_1()); }
	Colon
	{ after(grammarAccess.getClusterAccess().getColonKeyword_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_3_0__2__Impl
	rule__Cluster__Group_3_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getLeftSquareBracketKeyword_3_0_2()); }
	LeftSquareBracket
	{ after(grammarAccess.getClusterAccess().getLeftSquareBracketKeyword_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_3_0__3__Impl
	rule__Cluster__Group_3_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getNodesAssignment_3_0_3()); }
	(rule__Cluster__NodesAssignment_3_0_3)
	{ after(grammarAccess.getClusterAccess().getNodesAssignment_3_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_3_0__4__Impl
	rule__Cluster__Group_3_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getGroup_3_0_4()); }
	(rule__Cluster__Group_3_0_4__0)*
	{ after(grammarAccess.getClusterAccess().getGroup_3_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_3_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getRightSquareBracketKeyword_3_0_5()); }
	RightSquareBracket
	{ after(grammarAccess.getClusterAccess().getRightSquareBracketKeyword_3_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cluster__Group_3_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_3_0_4__0__Impl
	rule__Cluster__Group_3_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getCommaKeyword_3_0_4_0()); }
	Comma
	{ after(grammarAccess.getClusterAccess().getCommaKeyword_3_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__Group_3_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Group_3_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClusterAccess().getNodesAssignment_3_0_4_1()); }
	(rule__Cluster__NodesAssignment_3_0_4_1)
	{ after(grammarAccess.getClusterAccess().getNodesAssignment_3_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ring__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_0__0__Impl
	rule__Ring__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getRingKeyword_0_0()); }
	Ring
	{ after(grammarAccess.getRingAccess().getRingKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_0__1__Impl
	rule__Ring__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getNameAssignment_0_1()); }
	(rule__Ring__NameAssignment_0_1)
	{ after(grammarAccess.getRingAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_0__2__Impl
	rule__Ring__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getLeftCurlyBracketKeyword_0_2()); }
	LeftCurlyBracket
	{ after(grammarAccess.getRingAccess().getLeftCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getGroup_0_3()); }
	(rule__Ring__Group_0_3__0)
	{ after(grammarAccess.getRingAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ring__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_0_3__0__Impl
	rule__Ring__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getRegistrationKeyword_0_3_0()); }
	Registration
	{ after(grammarAccess.getRingAccess().getRegistrationKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_0_3__1__Impl
	rule__Ring__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getColonKeyword_0_3_1()); }
	Colon
	{ after(grammarAccess.getRingAccess().getColonKeyword_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getRegistrationAssignment_0_3_2()); }
	(rule__Ring__RegistrationAssignment_0_3_2)
	{ after(grammarAccess.getRingAccess().getRegistrationAssignment_0_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ring__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_1__0__Impl
	rule__Ring__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getMid_assignerKeyword_1_0()); }
	Mid_assigner
	{ after(grammarAccess.getRingAccess().getMid_assignerKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_1__1__Impl
	rule__Ring__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getColonKeyword_1_1()); }
	Colon
	{ after(grammarAccess.getRingAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getMid_assignerAssignment_1_2()); }
	(rule__Ring__Mid_assignerAssignment_1_2)
	{ after(grammarAccess.getRingAccess().getMid_assignerAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ring__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_2__0__Impl
	rule__Ring__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getGroup_2_0()); }
	(rule__Ring__Group_2_0__0)
	{ after(grammarAccess.getRingAccess().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getRightCurlyBracketKeyword_2_1()); }
	RightCurlyBracket
	{ after(grammarAccess.getRingAccess().getRightCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ring__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_2_0__0__Impl
	rule__Ring__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getNodesKeyword_2_0_0()); }
	Nodes
	{ after(grammarAccess.getRingAccess().getNodesKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_2_0__1__Impl
	rule__Ring__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getColonKeyword_2_0_1()); }
	Colon
	{ after(grammarAccess.getRingAccess().getColonKeyword_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_2_0__2__Impl
	rule__Ring__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getLeftSquareBracketKeyword_2_0_2()); }
	LeftSquareBracket
	{ after(grammarAccess.getRingAccess().getLeftSquareBracketKeyword_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_2_0__3__Impl
	rule__Ring__Group_2_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getNodesAssignment_2_0_3()); }
	(rule__Ring__NodesAssignment_2_0_3)
	{ after(grammarAccess.getRingAccess().getNodesAssignment_2_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_2_0__4__Impl
	rule__Ring__Group_2_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getGroup_2_0_4()); }
	(rule__Ring__Group_2_0_4__0)*
	{ after(grammarAccess.getRingAccess().getGroup_2_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_2_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getRightSquareBracketKeyword_2_0_5()); }
	RightSquareBracket
	{ after(grammarAccess.getRingAccess().getRightSquareBracketKeyword_2_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ring__Group_2_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_2_0_4__0__Impl
	rule__Ring__Group_2_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getCommaKeyword_2_0_4_0()); }
	Comma
	{ after(grammarAccess.getRingAccess().getCommaKeyword_2_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__Group_2_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Group_2_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRingAccess().getNodesAssignment_2_0_4_1()); }
	(rule__Ring__NodesAssignment_2_0_4_1)
	{ after(grammarAccess.getRingAccess().getNodesAssignment_2_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tree__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__Group_0__0__Impl
	rule__Tree__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeAccess().getTreeKeyword_0_0()); }
	Tree
	{ after(grammarAccess.getTreeAccess().getTreeKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__Group_0__1__Impl
	rule__Tree__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeAccess().getNameAssignment_0_1()); }
	(rule__Tree__NameAssignment_0_1)
	{ after(grammarAccess.getTreeAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__Group_0__2__Impl
	rule__Tree__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeAccess().getLeftCurlyBracketKeyword_0_2()); }
	LeftCurlyBracket
	{ after(grammarAccess.getTreeAccess().getLeftCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeAccess().getGroup_0_3()); }
	(rule__Tree__Group_0_3__0)
	{ after(grammarAccess.getTreeAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tree__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__Group_0_3__0__Impl
	rule__Tree__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeAccess().getRegistrationKeyword_0_3_0()); }
	Registration
	{ after(grammarAccess.getTreeAccess().getRegistrationKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__Group_0_3__1__Impl
	rule__Tree__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeAccess().getColonKeyword_0_3_1()); }
	Colon
	{ after(grammarAccess.getTreeAccess().getColonKeyword_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_0_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__Group_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_0_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeAccess().getRegistrationAssignment_0_3_2()); }
	(rule__Tree__RegistrationAssignment_0_3_2)
	{ after(grammarAccess.getTreeAccess().getRegistrationAssignment_0_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tree__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__Group_1__0__Impl
	rule__Tree__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeAccess().getGroup_1_0()); }
	(rule__Tree__Group_1_0__0)
	{ after(grammarAccess.getTreeAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeAccess().getRightCurlyBracketKeyword_1_1()); }
	RightCurlyBracket
	{ after(grammarAccess.getTreeAccess().getRightCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tree__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__Group_1_0__0__Impl
	rule__Tree__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeAccess().getNodesKeyword_1_0_0()); }
	Nodes
	{ after(grammarAccess.getTreeAccess().getNodesKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__Group_1_0__1__Impl
	rule__Tree__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeAccess().getColonKeyword_1_0_1()); }
	Colon
	{ after(grammarAccess.getTreeAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeAccess().getRootAssignment_1_0_2()); }
	(rule__Tree__RootAssignment_1_0_2)
	{ after(grammarAccess.getTreeAccess().getRootAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TreeNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TreeNode__Group__0__Impl
	rule__TreeNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeNodeAccess().getAddressAssignment_0()); }
	(rule__TreeNode__AddressAssignment_0)
	{ after(grammarAccess.getTreeNodeAccess().getAddressAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TreeNode__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeNodeAccess().getGroup_1()); }
	(rule__TreeNode__Group_1__0)?
	{ after(grammarAccess.getTreeNodeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TreeNode__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TreeNode__Group_1__0__Impl
	rule__TreeNode__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeNodeAccess().getLeftSquareBracketKeyword_1_0()); }
	LeftSquareBracket
	{ after(grammarAccess.getTreeNodeAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TreeNode__Group_1__1__Impl
	rule__TreeNode__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeNodeAccess().getChildrenAssignment_1_1()); }
	(rule__TreeNode__ChildrenAssignment_1_1)
	{ after(grammarAccess.getTreeNodeAccess().getChildrenAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TreeNode__Group_1__2__Impl
	rule__TreeNode__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeNodeAccess().getGroup_1_2()); }
	(rule__TreeNode__Group_1_2__0)*
	{ after(grammarAccess.getTreeNodeAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TreeNode__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeNodeAccess().getRightSquareBracketKeyword_1_3()); }
	RightSquareBracket
	{ after(grammarAccess.getTreeNodeAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TreeNode__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TreeNode__Group_1_2__0__Impl
	rule__TreeNode__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeNodeAccess().getCommaKeyword_1_2_0()); }
	Comma
	{ after(grammarAccess.getTreeNodeAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TreeNode__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeNodeAccess().getChildrenAssignment_1_2_1()); }
	(rule__TreeNode__ChildrenAssignment_1_2_1)
	{ after(grammarAccess.getTreeNodeAccess().getChildrenAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleServer__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getSingleServerAccess().getUnorderedGroup());
	}
:
	rule__SingleServer__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getSingleServerAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getSingleServerAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__SingleServer__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getSingleServerAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getSingleServerAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getSingleServerAccess().getGroup_0()); }
					(rule__SingleServer__Group_0__0)
					{ after(grammarAccess.getSingleServerAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getSingleServerAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getSingleServerAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getSingleServerAccess().getGroup_1()); }
					(rule__SingleServer__Group_1__0)
					{ after(grammarAccess.getSingleServerAccess().getGroup_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSingleServerAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__SingleServer__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleServer__UnorderedGroup__Impl
	rule__SingleServer__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleServer__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Cluster__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getClusterAccess().getUnorderedGroup());
	}
:
	rule__Cluster__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getClusterAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getClusterAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Cluster__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getClusterAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getClusterAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getClusterAccess().getGroup_0()); }
					(rule__Cluster__Group_0__0)
					{ after(grammarAccess.getClusterAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getClusterAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getClusterAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getClusterAccess().getGroup_1()); }
					(rule__Cluster__Group_1__0)
					{ after(grammarAccess.getClusterAccess().getGroup_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getClusterAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getClusterAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getClusterAccess().getGroup_2()); }
					(rule__Cluster__Group_2__0)
					{ after(grammarAccess.getClusterAccess().getGroup_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getClusterAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getClusterAccess().getUnorderedGroup(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getClusterAccess().getGroup_3()); }
					(rule__Cluster__Group_3__0)
					{ after(grammarAccess.getClusterAccess().getGroup_3()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getClusterAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Cluster__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__UnorderedGroup__Impl
	rule__Cluster__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__UnorderedGroup__Impl
	rule__Cluster__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__UnorderedGroup__Impl
	rule__Cluster__UnorderedGroup__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__UnorderedGroup__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cluster__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Ring__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getRingAccess().getUnorderedGroup());
	}
:
	rule__Ring__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getRingAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getRingAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Ring__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getRingAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getRingAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getRingAccess().getGroup_0()); }
					(rule__Ring__Group_0__0)
					{ after(grammarAccess.getRingAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getRingAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getRingAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getRingAccess().getGroup_1()); }
					(rule__Ring__Group_1__0)
					{ after(grammarAccess.getRingAccess().getGroup_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getRingAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getRingAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getRingAccess().getGroup_2()); }
					(rule__Ring__Group_2__0)
					{ after(grammarAccess.getRingAccess().getGroup_2()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRingAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Ring__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__UnorderedGroup__Impl
	rule__Ring__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__UnorderedGroup__Impl
	rule__Ring__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ring__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Tree__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getTreeAccess().getUnorderedGroup());
	}
:
	rule__Tree__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getTreeAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getTreeAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Tree__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getTreeAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getTreeAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getTreeAccess().getGroup_0()); }
					(rule__Tree__Group_0__0)
					{ after(grammarAccess.getTreeAccess().getGroup_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getTreeAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getTreeAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getTreeAccess().getGroup_1()); }
					(rule__Tree__Group_1__0)
					{ after(grammarAccess.getTreeAccess().getGroup_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTreeAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Tree__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__UnorderedGroup__Impl
	rule__Tree__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleServer__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleServerAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSingleServerAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__ServerAssignment_0_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleServerAccess().getServerSTRINGTerminalRuleCall_0_3_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSingleServerAccess().getServerSTRINGTerminalRuleCall_0_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleServer__TimeoutAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleServerAccess().getTimeoutINTTerminalRuleCall_1_0_2_0()); }
		RULE_INT
		{ after(grammarAccess.getSingleServerAccess().getTimeoutINTTerminalRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClusterAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getClusterAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Message_queueAssignment_0_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClusterAccess().getMessage_queueSTRINGTerminalRuleCall_0_3_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getClusterAccess().getMessage_queueSTRINGTerminalRuleCall_0_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__RegistrationAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClusterAccess().getRegistrationSTRINGTerminalRuleCall_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getClusterAccess().getRegistrationSTRINGTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__Mid_assignerAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClusterAccess().getMid_assignerSTRINGTerminalRuleCall_2_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getClusterAccess().getMid_assignerSTRINGTerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__NodesAssignment_3_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClusterAccess().getNodesSTRINGTerminalRuleCall_3_0_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getClusterAccess().getNodesSTRINGTerminalRuleCall_3_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cluster__NodesAssignment_3_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClusterAccess().getNodesSTRINGTerminalRuleCall_3_0_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getClusterAccess().getNodesSTRINGTerminalRuleCall_3_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRingAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRingAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__RegistrationAssignment_0_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRingAccess().getRegistrationSTRINGTerminalRuleCall_0_3_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getRingAccess().getRegistrationSTRINGTerminalRuleCall_0_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__Mid_assignerAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRingAccess().getMid_assignerSTRINGTerminalRuleCall_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getRingAccess().getMid_assignerSTRINGTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__NodesAssignment_2_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRingAccess().getNodesSTRINGTerminalRuleCall_2_0_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getRingAccess().getNodesSTRINGTerminalRuleCall_2_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ring__NodesAssignment_2_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRingAccess().getNodesSTRINGTerminalRuleCall_2_0_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRingAccess().getNodesSTRINGTerminalRuleCall_2_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTreeAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTreeAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__RegistrationAssignment_0_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTreeAccess().getRegistrationSTRINGTerminalRuleCall_0_3_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getTreeAccess().getRegistrationSTRINGTerminalRuleCall_0_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__RootAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTreeAccess().getRootTreeNodeParserRuleCall_1_0_2_0()); }
		ruleTreeNode
		{ after(grammarAccess.getTreeAccess().getRootTreeNodeParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__AddressAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTreeNodeAccess().getAddressSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getTreeNodeAccess().getAddressSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__ChildrenAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTreeNodeAccess().getChildrenTreeNodeParserRuleCall_1_1_0()); }
		ruleTreeNode
		{ after(grammarAccess.getTreeNodeAccess().getChildrenTreeNodeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__ChildrenAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTreeNodeAccess().getChildrenTreeNodeParserRuleCall_1_2_1_0()); }
		ruleTreeNode
		{ after(grammarAccess.getTreeNodeAccess().getChildrenTreeNodeParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
