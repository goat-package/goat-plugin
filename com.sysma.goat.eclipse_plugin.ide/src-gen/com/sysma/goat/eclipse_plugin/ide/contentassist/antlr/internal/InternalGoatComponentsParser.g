/*
 * generated by Xtext 2.12.0
 */
parser grammar InternalGoatComponentsParser;

options {
	tokenVocab=InternalGoatComponentsLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package com.sysma.goat.eclipse_plugin.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.sysma.goat.eclipse_plugin.services.GoatComponentsGrammarAccess;

}
@members {
	private GoatComponentsGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("ExclamationMark", "'!'");
		tokenNameToValue.put("PercentSign", "'\%'");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("PlusSign", "'+'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("CommercialAt", "'@'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("LeftCurlyBracket", "'{'");
		tokenNameToValue.put("VerticalLine", "'|'");
		tokenNameToValue.put("RightCurlyBracket", "'}'");
		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
		tokenNameToValue.put("AmpersandAmpersand", "'&&'");
		tokenNameToValue.put("PlusSignPlusSign", "'++'");
		tokenNameToValue.put("ColonEqualsSign", "':='");
		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
		tokenNameToValue.put("EqualsSignEqualsSign", "'=='");
		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
		tokenNameToValue.put("If", "'if'");
		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
		tokenNameToValue.put("Set", "'set'");
		tokenNameToValue.put("Var", "'var'");
		tokenNameToValue.put("Call", "'call'");
		tokenNameToValue.put("Case", "'case'");
		tokenNameToValue.put("Comp", "'comp'");
		tokenNameToValue.put("Else", "'else'");
		tokenNameToValue.put("Loop", "'loop'");
		tokenNameToValue.put("Proc", "'proc'");
		tokenNameToValue.put("Send", "'send'");
		tokenNameToValue.put("True", "'true'");
		tokenNameToValue.put("False", "'false'");
		tokenNameToValue.put("Print", "'print'");
		tokenNameToValue.put("Spawn", "'spawn'");
		tokenNameToValue.put("Return", "'return'");
		tokenNameToValue.put("Process", "'process'");
		tokenNameToValue.put("Receive", "'receive'");
		tokenNameToValue.put("Waitfor", "'waitfor'");
		tokenNameToValue.put("Function", "'function'");
		tokenNameToValue.put("Receiver", "'receiver'");
		tokenNameToValue.put("Component", "'component'");
		tokenNameToValue.put("Environment", "'environment'");
		tokenNameToValue.put("Infrastructure", "'infrastructure'");
	}

	public void setGrammarAccess(GoatComponentsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessDefinition
entryRuleProcessDefinition
:
{ before(grammarAccess.getProcessDefinitionRule()); }
	 ruleProcessDefinition
{ after(grammarAccess.getProcessDefinitionRule()); } 
	 EOF 
;

// Rule ProcessDefinition
ruleProcessDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessDefinitionAccess().getGroup()); }
		(rule__ProcessDefinition__Group__0)
		{ after(grammarAccess.getProcessDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePDPBlock
entryRulePDPBlock
:
{ before(grammarAccess.getPDPBlockRule()); }
	 rulePDPBlock
{ after(grammarAccess.getPDPBlockRule()); } 
	 EOF 
;

// Rule PDPBlock
rulePDPBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPDPBlockAccess().getGroup()); }
		(rule__PDPBlock__Group__0)
		{ after(grammarAccess.getPDPBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePDPSpawn
entryRulePDPSpawn
:
{ before(grammarAccess.getPDPSpawnRule()); }
	 rulePDPSpawn
{ after(grammarAccess.getPDPSpawnRule()); } 
	 EOF 
;

// Rule PDPSpawn
rulePDPSpawn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPDPSpawnAccess().getProcAssignment()); }
		(rule__PDPSpawn__ProcAssignment)
		{ after(grammarAccess.getPDPSpawnAccess().getProcAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePDPCall
entryRulePDPCall
:
{ before(grammarAccess.getPDPCallRule()); }
	 rulePDPCall
{ after(grammarAccess.getPDPCallRule()); } 
	 EOF 
;

// Rule PDPCall
rulePDPCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPDPCallAccess().getProcAssignment()); }
		(rule__PDPCall__ProcAssignment)
		{ after(grammarAccess.getPDPCallAccess().getProcAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessBlock
entryRuleProcessBlock
:
{ before(grammarAccess.getProcessBlockRule()); }
	 ruleProcessBlock
{ after(grammarAccess.getProcessBlockRule()); } 
	 EOF 
;

// Rule ProcessBlock
ruleProcessBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessBlockAccess().getGroup()); }
		(rule__ProcessBlock__Group__0)
		{ after(grammarAccess.getProcessBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessStatement
entryRuleProcessStatement
:
{ before(grammarAccess.getProcessStatementRule()); }
	 ruleProcessStatement
{ after(grammarAccess.getProcessStatementRule()); } 
	 EOF 
;

// Rule ProcessStatement
ruleProcessStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessStatementAccess().getAlternatives()); }
		(rule__ProcessStatement__Alternatives)
		{ after(grammarAccess.getProcessStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessSpawn
entryRuleProcessSpawn
:
{ before(grammarAccess.getProcessSpawnRule()); }
	 ruleProcessSpawn
{ after(grammarAccess.getProcessSpawnRule()); } 
	 EOF 
;

// Rule ProcessSpawn
ruleProcessSpawn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessSpawnAccess().getGroup()); }
		(rule__ProcessSpawn__Group__0)
		{ after(grammarAccess.getProcessSpawnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessCall
entryRuleProcessCall
:
{ before(grammarAccess.getProcessCallRule()); }
	 ruleProcessCall
{ after(grammarAccess.getProcessCallRule()); } 
	 EOF 
;

// Rule ProcessCall
ruleProcessCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessCallAccess().getGroup()); }
		(rule__ProcessCall__Group__0)
		{ after(grammarAccess.getProcessCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessSend
entryRuleProcessSend
:
{ before(grammarAccess.getProcessSendRule()); }
	 ruleProcessSend
{ after(grammarAccess.getProcessSendRule()); } 
	 EOF 
;

// Rule ProcessSend
ruleProcessSend 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessSendAccess().getGroup()); }
		(rule__ProcessSend__Group__0)
		{ after(grammarAccess.getProcessSendAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessReceive
entryRuleProcessReceive
:
{ before(grammarAccess.getProcessReceiveRule()); }
	 ruleProcessReceive
{ after(grammarAccess.getProcessReceiveRule()); } 
	 EOF 
;

// Rule ProcessReceive
ruleProcessReceive 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessReceiveAccess().getAlternatives()); }
		(rule__ProcessReceive__Alternatives)
		{ after(grammarAccess.getProcessReceiveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessReceiveSingle
entryRuleProcessReceiveSingle
:
{ before(grammarAccess.getProcessReceiveSingleRule()); }
	 ruleProcessReceiveSingle
{ after(grammarAccess.getProcessReceiveSingleRule()); } 
	 EOF 
;

// Rule ProcessReceiveSingle
ruleProcessReceiveSingle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessReceiveSingleAccess().getGroup()); }
		(rule__ProcessReceiveSingle__Group__0)
		{ after(grammarAccess.getProcessReceiveSingleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyProcessBlock
entryRuleEmptyProcessBlock
:
{ before(grammarAccess.getEmptyProcessBlockRule()); }
	 ruleEmptyProcessBlock
{ after(grammarAccess.getEmptyProcessBlockRule()); } 
	 EOF 
;

// Rule EmptyProcessBlock
ruleEmptyProcessBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyProcessBlockAccess().getProcessBlockAction()); }
		()
		{ after(grammarAccess.getEmptyProcessBlockAccess().getProcessBlockAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessReceiveMultiple
entryRuleProcessReceiveMultiple
:
{ before(grammarAccess.getProcessReceiveMultipleRule()); }
	 ruleProcessReceiveMultiple
{ after(grammarAccess.getProcessReceiveMultipleRule()); } 
	 EOF 
;

// Rule ProcessReceiveMultiple
ruleProcessReceiveMultiple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessReceiveMultipleAccess().getGroup()); }
		(rule__ProcessReceiveMultiple__Group__0)
		{ after(grammarAccess.getProcessReceiveMultipleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReceiveCase
entryRuleReceiveCase
:
{ before(grammarAccess.getReceiveCaseRule()); }
	 ruleReceiveCase
{ after(grammarAccess.getReceiveCaseRule()); } 
	 EOF 
;

// Rule ReceiveCase
ruleReceiveCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceiveCaseAccess().getGroup()); }
		(rule__ReceiveCase__Group__0)
		{ after(grammarAccess.getReceiveCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessIf
entryRuleProcessIf
:
{ before(grammarAccess.getProcessIfRule()); }
	 ruleProcessIf
{ after(grammarAccess.getProcessIfRule()); } 
	 EOF 
;

// Rule ProcessIf
ruleProcessIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessIfAccess().getGroup()); }
		(rule__ProcessIf__Group__0)
		{ after(grammarAccess.getProcessIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule ProcessThenBlock
ruleProcessThenBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessThenBlockAccess().getGroup()); }
		(rule__ProcessThenBlock__Group__0)
		{ after(grammarAccess.getProcessThenBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePTBThen
entryRulePTBThen
:
{ before(grammarAccess.getPTBThenRule()); }
	 rulePTBThen
{ after(grammarAccess.getPTBThenRule()); } 
	 EOF 
;

// Rule PTBThen
rulePTBThen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPTBThenAccess().getGroup()); }
		(rule__PTBThen__Group__0)
		{ after(grammarAccess.getPTBThenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessSet
entryRuleProcessSet
:
{ before(grammarAccess.getProcessSetRule()); }
	 ruleProcessSet
{ after(grammarAccess.getProcessSetRule()); } 
	 EOF 
;

// Rule ProcessSet
ruleProcessSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessSetAccess().getGroup()); }
		(rule__ProcessSet__Group__0)
		{ after(grammarAccess.getProcessSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessWaitFor
entryRuleProcessWaitFor
:
{ before(grammarAccess.getProcessWaitForRule()); }
	 ruleProcessWaitFor
{ after(grammarAccess.getProcessWaitForRule()); } 
	 EOF 
;

// Rule ProcessWaitFor
ruleProcessWaitFor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessWaitForAccess().getGroup()); }
		(rule__ProcessWaitFor__Group__0)
		{ after(grammarAccess.getProcessWaitForAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessLoop
entryRuleProcessLoop
:
{ before(grammarAccess.getProcessLoopRule()); }
	 ruleProcessLoop
{ after(grammarAccess.getProcessLoopRule()); } 
	 EOF 
;

// Rule ProcessLoop
ruleProcessLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessLoopAccess().getGroup()); }
		(rule__ProcessLoop__Group__0)
		{ after(grammarAccess.getProcessLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdate
entryRuleUpdate
:
{ before(grammarAccess.getUpdateRule()); }
	 ruleUpdate
{ after(grammarAccess.getUpdateRule()); } 
	 EOF 
;

// Rule Update
ruleUpdate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateAccess().getGroup()); }
		(rule__Update__Group__0)
		{ after(grammarAccess.getUpdateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateComponentAttribute
entryRuleUpdateComponentAttribute
:
{ before(grammarAccess.getUpdateComponentAttributeRule()); }
	 ruleUpdateComponentAttribute
{ after(grammarAccess.getUpdateComponentAttributeRule()); } 
	 EOF 
;

// Rule UpdateComponentAttribute
ruleUpdateComponentAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateComponentAttributeAccess().getGroup()); }
		(rule__UpdateComponentAttribute__Group__0)
		{ after(grammarAccess.getUpdateComponentAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateLocalAttribute
entryRuleUpdateLocalAttribute
:
{ before(grammarAccess.getUpdateLocalAttributeRule()); }
	 ruleUpdateLocalAttribute
{ after(grammarAccess.getUpdateLocalAttributeRule()); } 
	 EOF 
;

// Rule UpdateLocalAttribute
ruleUpdateLocalAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateLocalAttributeAccess().getGroup()); }
		(rule__UpdateLocalAttribute__Group__0)
		{ after(grammarAccess.getUpdateLocalAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrintStatement
entryRulePrintStatement
:
{ before(grammarAccess.getPrintStatementRule()); }
	 rulePrintStatement
{ after(grammarAccess.getPrintStatementRule()); } 
	 EOF 
;

// Rule PrintStatement
rulePrintStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrintStatementAccess().getPrintFormattedStatementParserRuleCall()); }
		rulePrintFormattedStatement
		{ after(grammarAccess.getPrintStatementAccess().getPrintFormattedStatementParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrintFormattedStatement
entryRulePrintFormattedStatement
:
{ before(grammarAccess.getPrintFormattedStatementRule()); }
	 rulePrintFormattedStatement
{ after(grammarAccess.getPrintFormattedStatementRule()); } 
	 EOF 
;

// Rule PrintFormattedStatement
rulePrintFormattedStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrintFormattedStatementAccess().getGroup()); }
		(rule__PrintFormattedStatement__Group__0)
		{ after(grammarAccess.getPrintFormattedStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvInitValue
entryRuleEnvInitValue
:
{ before(grammarAccess.getEnvInitValueRule()); }
	 ruleEnvInitValue
{ after(grammarAccess.getEnvInitValueRule()); } 
	 EOF 
;

// Rule EnvInitValue
ruleEnvInitValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvInitValueAccess().getAlternatives()); }
		(rule__EnvInitValue__Alternatives)
		{ after(grammarAccess.getEnvInitValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironment
entryRuleEnvironment
:
{ before(grammarAccess.getEnvironmentRule()); }
	 ruleEnvironment
{ after(grammarAccess.getEnvironmentRule()); } 
	 EOF 
;

// Rule Environment
ruleEnvironment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentAccess().getGroup()); }
		(rule__Environment__Group__0)
		{ after(grammarAccess.getEnvironmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironmentDefinition
entryRuleEnvironmentDefinition
:
{ before(grammarAccess.getEnvironmentDefinitionRule()); }
	 ruleEnvironmentDefinition
{ after(grammarAccess.getEnvironmentDefinitionRule()); } 
	 EOF 
;

// Rule EnvironmentDefinition
ruleEnvironmentDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentDefinitionAccess().getGroup()); }
		(rule__EnvironmentDefinition__Group__0)
		{ after(grammarAccess.getEnvironmentDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentDefinition
entryRuleComponentDefinition
:
{ before(grammarAccess.getComponentDefinitionRule()); }
	 ruleComponentDefinition
{ after(grammarAccess.getComponentDefinitionRule()); } 
	 EOF 
;

// Rule ComponentDefinition
ruleComponentDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentDefinitionAccess().getGroup()); }
		(rule__ComponentDefinition__Group__0)
		{ after(grammarAccess.getComponentDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getOrParserRuleCall()); }
		ruleOr
		{ after(grammarAccess.getExpressionAccess().getOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquality
entryRuleEquality
:
{ before(grammarAccess.getEqualityRule()); }
	 ruleEquality
{ after(grammarAccess.getEqualityRule()); } 
	 EOF 
;

// Rule Equality
ruleEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup()); }
		(rule__Equality__Group__0)
		{ after(grammarAccess.getEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus
:
{ before(grammarAccess.getPlusOrMinusRule()); }
	 rulePlusOrMinus
{ after(grammarAccess.getPlusOrMinusRule()); } 
	 EOF 
;

// Rule PlusOrMinus
rulePlusOrMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup()); }
		(rule__PlusOrMinus__Group__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv
:
{ before(grammarAccess.getMulOrDivRule()); }
	 ruleMulOrDiv
{ after(grammarAccess.getMulOrDivRule()); } 
	 EOF 
;

// Rule MulOrDiv
ruleMulOrDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup()); }
		(rule__MulOrDiv__Group__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncParam
entryRuleFuncParam
:
{ before(grammarAccess.getFuncParamRule()); }
	 ruleFuncParam
{ after(grammarAccess.getFuncParamRule()); } 
	 EOF 
;

// Rule FuncParam
ruleFuncParam 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncParamAccess().getGroup()); }
		(rule__FuncParam__Group__0)
		{ after(grammarAccess.getFuncParamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncDefinition
entryRuleFuncDefinition
:
{ before(grammarAccess.getFuncDefinitionRule()); }
	 ruleFuncDefinition
{ after(grammarAccess.getFuncDefinitionRule()); } 
	 EOF 
;

// Rule FuncDefinition
ruleFuncDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncDefinitionAccess().getGroup()); }
		(rule__FuncDefinition__Group__0)
		{ after(grammarAccess.getFuncDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncBlock
entryRuleFuncBlock
:
{ before(grammarAccess.getFuncBlockRule()); }
	 ruleFuncBlock
{ after(grammarAccess.getFuncBlockRule()); } 
	 EOF 
;

// Rule FuncBlock
ruleFuncBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncBlockAccess().getGroup()); }
		(rule__FuncBlock__Group__0)
		{ after(grammarAccess.getFuncBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncStatement
entryRuleFuncStatement
:
{ before(grammarAccess.getFuncStatementRule()); }
	 ruleFuncStatement
{ after(grammarAccess.getFuncStatementRule()); } 
	 EOF 
;

// Rule FuncStatement
ruleFuncStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncStatementAccess().getAlternatives()); }
		(rule__FuncStatement__Alternatives)
		{ after(grammarAccess.getFuncStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncVarDeclaration
entryRuleFuncVarDeclaration
:
{ before(grammarAccess.getFuncVarDeclarationRule()); }
	 ruleFuncVarDeclaration
{ after(grammarAccess.getFuncVarDeclarationRule()); } 
	 EOF 
;

// Rule FuncVarDeclaration
ruleFuncVarDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncVarDeclarationAccess().getGroup()); }
		(rule__FuncVarDeclaration__Group__0)
		{ after(grammarAccess.getFuncVarDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncVarAssign
entryRuleFuncVarAssign
:
{ before(grammarAccess.getFuncVarAssignRule()); }
	 ruleFuncVarAssign
{ after(grammarAccess.getFuncVarAssignRule()); } 
	 EOF 
;

// Rule FuncVarAssign
ruleFuncVarAssign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncVarAssignAccess().getGroup()); }
		(rule__FuncVarAssign__Group__0)
		{ after(grammarAccess.getFuncVarAssignAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncIfElse
entryRuleFuncIfElse
:
{ before(grammarAccess.getFuncIfElseRule()); }
	 ruleFuncIfElse
{ after(grammarAccess.getFuncIfElseRule()); } 
	 EOF 
;

// Rule FuncIfElse
ruleFuncIfElse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncIfElseAccess().getGroup()); }
		(rule__FuncIfElse__Group__0)
		{ after(grammarAccess.getFuncIfElseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncReturn
entryRuleFuncReturn
:
{ before(grammarAccess.getFuncReturnRule()); }
	 ruleFuncReturn
{ after(grammarAccess.getFuncReturnRule()); } 
	 EOF 
;

// Rule FuncReturn
ruleFuncReturn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncReturnAccess().getGroup()); }
		(rule__FuncReturn__Group__0)
		{ after(grammarAccess.getFuncReturnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getProcessesAssignment_3_0()); }
		(rule__Model__ProcessesAssignment_3_0)
		{ after(grammarAccess.getModelAccess().getProcessesAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getComponentsAssignment_3_1()); }
		(rule__Model__ComponentsAssignment_3_1)
		{ after(grammarAccess.getModelAccess().getComponentsAssignment_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getFunctionsAssignment_3_2()); }
		(rule__Model__FunctionsAssignment_3_2)
		{ after(grammarAccess.getModelAccess().getFunctionsAssignment_3_2()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getEnvironmentsAssignment_3_3()); }
		(rule__Model__EnvironmentsAssignment_3_3)
		{ after(grammarAccess.getModelAccess().getEnvironmentsAssignment_3_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDefinition__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessDefinitionAccess().getGroup_2_0()); }
		(rule__ProcessDefinition__Group_2_0__0)
		{ after(grammarAccess.getProcessDefinitionAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessDefinitionAccess().getBlockAssignment_2_1()); }
		(rule__ProcessDefinition__BlockAssignment_2_1)
		{ after(grammarAccess.getProcessDefinitionAccess().getBlockAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessStatementAccess().getProcessSpawnParserRuleCall_0()); }
		ruleProcessSpawn
		{ after(grammarAccess.getProcessStatementAccess().getProcessSpawnParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessStatementAccess().getProcessCallParserRuleCall_1()); }
		ruleProcessCall
		{ after(grammarAccess.getProcessStatementAccess().getProcessCallParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getProcessStatementAccess().getProcessSendParserRuleCall_2()); }
		ruleProcessSend
		{ after(grammarAccess.getProcessStatementAccess().getProcessSendParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getProcessStatementAccess().getProcessReceiveParserRuleCall_3()); }
		ruleProcessReceive
		{ after(grammarAccess.getProcessStatementAccess().getProcessReceiveParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getProcessStatementAccess().getProcessIfParserRuleCall_4()); }
		ruleProcessIf
		{ after(grammarAccess.getProcessStatementAccess().getProcessIfParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getProcessStatementAccess().getProcessSetParserRuleCall_5()); }
		ruleProcessSet
		{ after(grammarAccess.getProcessStatementAccess().getProcessSetParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getProcessStatementAccess().getProcessWaitForParserRuleCall_6()); }
		ruleProcessWaitFor
		{ after(grammarAccess.getProcessStatementAccess().getProcessWaitForParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getProcessStatementAccess().getProcessLoopParserRuleCall_7()); }
		ruleProcessLoop
		{ after(grammarAccess.getProcessStatementAccess().getProcessLoopParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceive__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessReceiveAccess().getProcessReceiveSingleParserRuleCall_0()); }
		ruleProcessReceiveSingle
		{ after(grammarAccess.getProcessReceiveAccess().getProcessReceiveSingleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessReceiveAccess().getProcessReceiveMultipleParserRuleCall_1()); }
		ruleProcessReceiveMultiple
		{ after(grammarAccess.getProcessReceiveAccess().getProcessReceiveMultipleParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessThenBlock__ActionAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessThenBlockAccess().getActionProcessSendParserRuleCall_1_0_0()); }
		ruleProcessSend
		{ after(grammarAccess.getProcessThenBlockAccess().getActionProcessSendParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessThenBlockAccess().getActionProcessReceiveParserRuleCall_1_0_1()); }
		ruleProcessReceive
		{ after(grammarAccess.getProcessThenBlockAccess().getActionProcessReceiveParserRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getProcessThenBlockAccess().getActionProcessSetParserRuleCall_1_0_2()); }
		ruleProcessSet
		{ after(grammarAccess.getProcessThenBlockAccess().getActionProcessSetParserRuleCall_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__AttributeAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getAttributeUpdateComponentAttributeParserRuleCall_1_1_0_0()); }
		ruleUpdateComponentAttribute
		{ after(grammarAccess.getUpdateAccess().getAttributeUpdateComponentAttributeParserRuleCall_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateAccess().getAttributeUpdateLocalAttributeParserRuleCall_1_1_0_1()); }
		ruleUpdateLocalAttribute
		{ after(grammarAccess.getUpdateAccess().getAttributeUpdateLocalAttributeParserRuleCall_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__AttributeAlternatives_1_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getAttributeUpdateComponentAttributeParserRuleCall_1_4_1_0_0()); }
		ruleUpdateComponentAttribute
		{ after(grammarAccess.getUpdateAccess().getAttributeUpdateComponentAttributeParserRuleCall_1_4_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateAccess().getAttributeUpdateLocalAttributeParserRuleCall_1_4_1_0_1()); }
		ruleUpdateLocalAttribute
		{ after(grammarAccess.getUpdateAccess().getAttributeUpdateLocalAttributeParserRuleCall_1_4_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvInitValueAccess().getGroup_0()); }
		(rule__EnvInitValue__Group_0__0)
		{ after(grammarAccess.getEnvInitValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnvInitValueAccess().getGroup_1()); }
		(rule__EnvInitValue__Group_1__0)
		{ after(grammarAccess.getEnvInitValueAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getEnvInitValueAccess().getGroup_2()); }
		(rule__EnvInitValue__Group_2__0)
		{ after(grammarAccess.getEnvInitValueAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getEnvInitValueAccess().getGroup_3()); }
		(rule__EnvInitValue__Group_3__0)
		{ after(grammarAccess.getEnvInitValueAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__ValueAlternatives_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvInitValueAccess().getValueTrueKeyword_3_1_0_0()); }
		True
		{ after(grammarAccess.getEnvInitValueAccess().getValueTrueKeyword_3_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnvInitValueAccess().getValueFalseKeyword_3_1_0_1()); }
		False
		{ after(grammarAccess.getEnvInitValueAccess().getValueFalseKeyword_3_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDefinition__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDefinitionAccess().getEnvrefAssignment_1_0()); }
		(rule__ComponentDefinition__EnvrefAssignment_1_0)
		{ after(grammarAccess.getComponentDefinitionAccess().getEnvrefAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentDefinitionAccess().getEnvAssignment_1_1()); }
		(rule__ComponentDefinition__EnvAssignment_1_1)
		{ after(grammarAccess.getComponentDefinitionAccess().getEnvAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDefinition__BlockAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDefinitionAccess().getBlockPDPBlockParserRuleCall_3_0_0()); }
		rulePDPBlock
		{ after(grammarAccess.getComponentDefinitionAccess().getBlockPDPBlockParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentDefinitionAccess().getBlockProcessBlockParserRuleCall_3_0_1()); }
		ruleProcessBlock
		{ after(grammarAccess.getComponentDefinitionAccess().getBlockProcessBlockParserRuleCall_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
		EqualsSignEqualsSign
		{ after(grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
		ExclamationMarkEqualsSign
		{ after(grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
		GreaterThanSignEqualsSign
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
		LessThanSignEqualsSign
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
		GreaterThanSign
		{ after(grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); }
		LessThanSign
		{ after(grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
		(rule__PlusOrMinus__Group_1_0_0__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
		(rule__PlusOrMinus__Group_1_0_1__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_2()); }
		(rule__PlusOrMinus__Group_1_0_2__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0()); }
		Asterisk
		{ after(grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1()); }
		Solidus
		{ after(grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpPercentSignKeyword_1_1_0_2()); }
		PercentSign
		{ after(grammarAccess.getMulOrDivAccess().getOpPercentSignKeyword_1_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_2()); }
		(rule__Primary__Group_2__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_3()); }
		ruleAtomic
		{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
		(rule__Atomic__Group_0__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
		(rule__Atomic__Group_2__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
		(rule__Atomic__Group_3__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_4()); }
		(rule__Atomic__Group_4__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_5()); }
		(rule__Atomic__Group_5__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_6()); }
		(rule__Atomic__Group_6__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_7()); }
		(rule__Atomic__Group_7__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAlternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueTrueKeyword_2_1_0_0()); }
		True
		{ after(grammarAccess.getAtomicAccess().getValueTrueKeyword_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getValueFalseKeyword_2_1_0_1()); }
		False
		{ after(grammarAccess.getAtomicAccess().getValueFalseKeyword_2_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncStatementAccess().getFuncVarAssignParserRuleCall_0()); }
		ruleFuncVarAssign
		{ after(grammarAccess.getFuncStatementAccess().getFuncVarAssignParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFuncStatementAccess().getFuncIfElseParserRuleCall_1()); }
		ruleFuncIfElse
		{ after(grammarAccess.getFuncStatementAccess().getFuncIfElseParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFuncStatementAccess().getFuncReturnParserRuleCall_2()); }
		ruleFuncReturn
		{ after(grammarAccess.getFuncStatementAccess().getFuncReturnParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFuncStatementAccess().getFuncVarDeclarationParserRuleCall_3()); }
		ruleFuncVarDeclaration
		{ after(grammarAccess.getFuncStatementAccess().getFuncVarDeclarationParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelAction_0()); }
	()
	{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getInfrastructureKeyword_1()); }
	Infrastructure
	{ after(grammarAccess.getModelAccess().getInfrastructureKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getInfrastructureAssignment_2()); }
	(rule__Model__InfrastructureAssignment_2)
	{ after(grammarAccess.getModelAccess().getInfrastructureAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAlternatives_3()); }
	(rule__Model__Alternatives_3)*
	{ after(grammarAccess.getModelAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessDefinition__Group__0__Impl
	rule__ProcessDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessDefinitionAccess().getProcessKeyword_0()); }
	Process
	{ after(grammarAccess.getProcessDefinitionAccess().getProcessKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessDefinition__Group__1__Impl
	rule__ProcessDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessDefinitionAccess().getNameAssignment_1()); }
	(rule__ProcessDefinition__NameAssignment_1)
	{ after(grammarAccess.getProcessDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessDefinitionAccess().getAlternatives_2()); }
	(rule__ProcessDefinition__Alternatives_2)
	{ after(grammarAccess.getProcessDefinitionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessDefinition__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessDefinition__Group_2_0__0__Impl
	rule__ProcessDefinition__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDefinition__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessDefinitionAccess().getEqualsSignKeyword_2_0_0()); }
	EqualsSign
	{ after(grammarAccess.getProcessDefinitionAccess().getEqualsSignKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDefinition__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessDefinition__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDefinition__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessDefinitionAccess().getBlockAssignment_2_0_1()); }
	(rule__ProcessDefinition__BlockAssignment_2_0_1)
	{ after(grammarAccess.getProcessDefinitionAccess().getBlockAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PDPBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PDPBlock__Group__0__Impl
	rule__PDPBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PDPBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPDPBlockAccess().getGroup_0()); }
	(rule__PDPBlock__Group_0__0)*
	{ after(grammarAccess.getPDPBlockAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PDPBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PDPBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PDPBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPDPBlockAccess().getStatementsAssignment_1()); }
	(rule__PDPBlock__StatementsAssignment_1)
	{ after(grammarAccess.getPDPBlockAccess().getStatementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PDPBlock__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PDPBlock__Group_0__0__Impl
	rule__PDPBlock__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PDPBlock__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPDPBlockAccess().getStatementsAssignment_0_0()); }
	(rule__PDPBlock__StatementsAssignment_0_0)
	{ after(grammarAccess.getPDPBlockAccess().getStatementsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PDPBlock__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PDPBlock__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PDPBlock__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPDPBlockAccess().getVerticalLineKeyword_0_1()); }
	VerticalLine
	{ after(grammarAccess.getPDPBlockAccess().getVerticalLineKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBlock__Group__0__Impl
	rule__ProcessBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBlockAccess().getLeftCurlyBracketKeyword_0()); }
	LeftCurlyBracket
	{ after(grammarAccess.getProcessBlockAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBlock__Group__1__Impl
	rule__ProcessBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBlockAccess().getProcessBlockAction_1()); }
	()
	{ after(grammarAccess.getProcessBlockAccess().getProcessBlockAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBlock__Group__2__Impl
	rule__ProcessBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBlockAccess().getStatementsAssignment_2()); }
	(rule__ProcessBlock__StatementsAssignment_2)*
	{ after(grammarAccess.getProcessBlockAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessBlockAccess().getRightCurlyBracketKeyword_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getProcessBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessSpawn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSpawn__Group__0__Impl
	rule__ProcessSpawn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSpawn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSpawnAccess().getSpawnKeyword_0()); }
	Spawn
	{ after(grammarAccess.getProcessSpawnAccess().getSpawnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSpawn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSpawn__Group__1__Impl
	rule__ProcessSpawn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSpawn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSpawnAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getProcessSpawnAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSpawn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSpawn__Group__2__Impl
	rule__ProcessSpawn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSpawn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSpawnAccess().getProcAssignment_2()); }
	(rule__ProcessSpawn__ProcAssignment_2)
	{ after(grammarAccess.getProcessSpawnAccess().getProcAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSpawn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSpawn__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSpawn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSpawnAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getProcessSpawnAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessCall__Group__0__Impl
	rule__ProcessCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessCallAccess().getCallKeyword_0()); }
	Call
	{ after(grammarAccess.getProcessCallAccess().getCallKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessCall__Group__1__Impl
	rule__ProcessCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessCallAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getProcessCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessCall__Group__2__Impl
	rule__ProcessCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessCallAccess().getProcAssignment_2()); }
	(rule__ProcessCall__ProcAssignment_2)
	{ after(grammarAccess.getProcessCallAccess().getProcAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessCallAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getProcessCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessSend__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group__0__Impl
	rule__ProcessSend__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getSendKeyword_0()); }
	Send
	{ after(grammarAccess.getProcessSendAccess().getSendKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group__1__Impl
	rule__ProcessSend__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getLeftCurlyBracketKeyword_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getProcessSendAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group__2__Impl
	rule__ProcessSend__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getGroup_2()); }
	(rule__ProcessSend__Group_2__0)?
	{ after(grammarAccess.getProcessSendAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group__3__Impl
	rule__ProcessSend__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getRightCurlyBracketKeyword_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getProcessSendAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group__4__Impl
	rule__ProcessSend__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getCommercialAtKeyword_4()); }
	CommercialAt
	{ after(grammarAccess.getProcessSendAccess().getCommercialAtKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group__5__Impl
	rule__ProcessSend__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getLeftParenthesisKeyword_5()); }
	LeftParenthesis
	{ after(grammarAccess.getProcessSendAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group__6__Impl
	rule__ProcessSend__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getSend_predAssignment_6()); }
	(rule__ProcessSend__Send_predAssignment_6)
	{ after(grammarAccess.getProcessSendAccess().getSend_predAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group__7__Impl
	rule__ProcessSend__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getRightParenthesisKeyword_7()); }
	RightParenthesis
	{ after(grammarAccess.getProcessSendAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group__8__Impl
	rule__ProcessSend__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getUpdatesAssignment_8()); }
	(rule__ProcessSend__UpdatesAssignment_8)
	{ after(grammarAccess.getProcessSendAccess().getUpdatesAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group__9__Impl
	rule__ProcessSend__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getPrintAssignment_9()); }
	(rule__ProcessSend__PrintAssignment_9)?
	{ after(grammarAccess.getProcessSendAccess().getPrintAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getSemicolonKeyword_10()); }
	Semicolon
	{ after(grammarAccess.getProcessSendAccess().getSemicolonKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessSend__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group_2__0__Impl
	rule__ProcessSend__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getMsgOutPartsAssignment_2_0()); }
	(rule__ProcessSend__MsgOutPartsAssignment_2_0)
	{ after(grammarAccess.getProcessSendAccess().getMsgOutPartsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getGroup_2_1()); }
	(rule__ProcessSend__Group_2_1__0)*
	{ after(grammarAccess.getProcessSendAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessSend__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group_2_1__0__Impl
	rule__ProcessSend__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getProcessSendAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSend__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSendAccess().getMsgOutPartsAssignment_2_1_1()); }
	(rule__ProcessSend__MsgOutPartsAssignment_2_1_1)
	{ after(grammarAccess.getProcessSendAccess().getMsgOutPartsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessReceiveSingle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessReceiveSingle__Group__0__Impl
	rule__ProcessReceiveSingle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveSingle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessReceiveSingleAccess().getReceiveKeyword_0()); }
	Receive
	{ after(grammarAccess.getProcessReceiveSingleAccess().getReceiveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveSingle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessReceiveSingle__Group__1__Impl
	rule__ProcessReceiveSingle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveSingle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessReceiveSingleAccess().getCasesAssignment_1()); }
	(rule__ProcessReceiveSingle__CasesAssignment_1)
	{ after(grammarAccess.getProcessReceiveSingleAccess().getCasesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveSingle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessReceiveSingle__Group__2__Impl
	rule__ProcessReceiveSingle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveSingle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessReceiveSingleAccess().getSemicolonKeyword_2()); }
	Semicolon
	{ after(grammarAccess.getProcessReceiveSingleAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveSingle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessReceiveSingle__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveSingle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessReceiveSingleAccess().getThenAssignment_3()); }
	(rule__ProcessReceiveSingle__ThenAssignment_3)
	{ after(grammarAccess.getProcessReceiveSingleAccess().getThenAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessReceiveMultiple__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessReceiveMultiple__Group__0__Impl
	rule__ProcessReceiveMultiple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessReceiveMultipleAccess().getReceiveKeyword_0()); }
	Receive
	{ after(grammarAccess.getProcessReceiveMultipleAccess().getReceiveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessReceiveMultiple__Group__1__Impl
	rule__ProcessReceiveMultiple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessReceiveMultipleAccess().getLeftCurlyBracketKeyword_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getProcessReceiveMultipleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessReceiveMultiple__Group__2__Impl
	rule__ProcessReceiveMultiple__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProcessReceiveMultipleAccess().getGroup_2()); }
		(rule__ProcessReceiveMultiple__Group_2__0)
		{ after(grammarAccess.getProcessReceiveMultipleAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getProcessReceiveMultipleAccess().getGroup_2()); }
		(rule__ProcessReceiveMultiple__Group_2__0)*
		{ after(grammarAccess.getProcessReceiveMultipleAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessReceiveMultiple__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessReceiveMultipleAccess().getRightCurlyBracketKeyword_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getProcessReceiveMultipleAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessReceiveMultiple__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessReceiveMultiple__Group_2__0__Impl
	rule__ProcessReceiveMultiple__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessReceiveMultipleAccess().getCaseKeyword_2_0()); }
	Case
	{ after(grammarAccess.getProcessReceiveMultipleAccess().getCaseKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessReceiveMultiple__Group_2__1__Impl
	rule__ProcessReceiveMultiple__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessReceiveMultipleAccess().getCasesAssignment_2_1()); }
	(rule__ProcessReceiveMultiple__CasesAssignment_2_1)
	{ after(grammarAccess.getProcessReceiveMultipleAccess().getCasesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessReceiveMultiple__Group_2__2__Impl
	rule__ProcessReceiveMultiple__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessReceiveMultipleAccess().getColonKeyword_2_2()); }
	Colon
	{ after(grammarAccess.getProcessReceiveMultipleAccess().getColonKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessReceiveMultiple__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessReceiveMultipleAccess().getThenAssignment_2_3()); }
	(rule__ProcessReceiveMultiple__ThenAssignment_2_3)
	{ after(grammarAccess.getProcessReceiveMultipleAccess().getThenAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveCase__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiveCase__Group__0__Impl
	rule__ReceiveCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiveCaseAccess().getLeftParenthesisKeyword_0()); }
	LeftParenthesis
	{ after(grammarAccess.getReceiveCaseAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiveCase__Group__1__Impl
	rule__ReceiveCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiveCaseAccess().getCondAssignment_1()); }
	(rule__ReceiveCase__CondAssignment_1)
	{ after(grammarAccess.getReceiveCaseAccess().getCondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiveCase__Group__2__Impl
	rule__ReceiveCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiveCaseAccess().getRightParenthesisKeyword_2()); }
	RightParenthesis
	{ after(grammarAccess.getReceiveCaseAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiveCase__Group__3__Impl
	rule__ReceiveCase__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiveCaseAccess().getLeftCurlyBracketKeyword_3()); }
	LeftCurlyBracket
	{ after(grammarAccess.getReceiveCaseAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiveCase__Group__4__Impl
	rule__ReceiveCase__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiveCaseAccess().getGroup_4()); }
	(rule__ReceiveCase__Group_4__0)?
	{ after(grammarAccess.getReceiveCaseAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiveCase__Group__5__Impl
	rule__ReceiveCase__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiveCaseAccess().getRightCurlyBracketKeyword_5()); }
	RightCurlyBracket
	{ after(grammarAccess.getReceiveCaseAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiveCase__Group__6__Impl
	rule__ReceiveCase__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiveCaseAccess().getUpdatesAssignment_6()); }
	(rule__ReceiveCase__UpdatesAssignment_6)
	{ after(grammarAccess.getReceiveCaseAccess().getUpdatesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiveCase__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiveCaseAccess().getPrintAssignment_7()); }
	(rule__ReceiveCase__PrintAssignment_7)?
	{ after(grammarAccess.getReceiveCaseAccess().getPrintAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveCase__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiveCase__Group_4__0__Impl
	rule__ReceiveCase__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiveCaseAccess().getMsgInPartsAssignment_4_0()); }
	(rule__ReceiveCase__MsgInPartsAssignment_4_0)
	{ after(grammarAccess.getReceiveCaseAccess().getMsgInPartsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiveCase__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiveCaseAccess().getGroup_4_1()); }
	(rule__ReceiveCase__Group_4_1__0)*
	{ after(grammarAccess.getReceiveCaseAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiveCase__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiveCase__Group_4_1__0__Impl
	rule__ReceiveCase__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiveCaseAccess().getCommaKeyword_4_1_0()); }
	Comma
	{ after(grammarAccess.getReceiveCaseAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiveCase__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiveCaseAccess().getMsgInPartsAssignment_4_1_1()); }
	(rule__ReceiveCase__MsgInPartsAssignment_4_1_1)
	{ after(grammarAccess.getReceiveCaseAccess().getMsgInPartsAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessIf__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group__0__Impl
	rule__ProcessIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getIfKeyword_0()); }
	If
	{ after(grammarAccess.getProcessIfAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group__1__Impl
	rule__ProcessIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getProcessIfAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group__2__Impl
	rule__ProcessIf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getCondAssignment_2()); }
	(rule__ProcessIf__CondAssignment_2)
	{ after(grammarAccess.getProcessIfAccess().getCondAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group__3__Impl
	rule__ProcessIf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getProcessIfAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group__4__Impl
	rule__ProcessIf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getProcessThenBlockParserRuleCall_4()); }
	ruleProcessThenBlock
	{ after(grammarAccess.getProcessIfAccess().getProcessThenBlockParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group__5__Impl
	rule__ProcessIf__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getGroup_5()); }
	(rule__ProcessIf__Group_5__0)*
	{ after(grammarAccess.getProcessIfAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getGroup_6()); }
	(rule__ProcessIf__Group_6__0)?
	{ after(grammarAccess.getProcessIfAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessIf__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group_5__0__Impl
	rule__ProcessIf__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getElseKeyword_5_0()); }
	Else
	{ after(grammarAccess.getProcessIfAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group_5__1__Impl
	rule__ProcessIf__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getIfKeyword_5_1()); }
	If
	{ after(grammarAccess.getProcessIfAccess().getIfKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group_5__2__Impl
	rule__ProcessIf__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getLeftParenthesisKeyword_5_2()); }
	LeftParenthesis
	{ after(grammarAccess.getProcessIfAccess().getLeftParenthesisKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group_5__3__Impl
	rule__ProcessIf__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getCondAssignment_5_3()); }
	(rule__ProcessIf__CondAssignment_5_3)
	{ after(grammarAccess.getProcessIfAccess().getCondAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group_5__4__Impl
	rule__ProcessIf__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getRightParenthesisKeyword_5_4()); }
	RightParenthesis
	{ after(grammarAccess.getProcessIfAccess().getRightParenthesisKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group_5__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group_5__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group_5__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getProcessThenBlockParserRuleCall_5_5()); }
	ruleProcessThenBlock
	{ after(grammarAccess.getProcessIfAccess().getProcessThenBlockParserRuleCall_5_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessIf__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group_6__0__Impl
	rule__ProcessIf__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getElseKeyword_6_0()); }
	Else
	{ after(grammarAccess.getProcessIfAccess().getElseKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessIf__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessIfAccess().getProcessThenBlockParserRuleCall_6_1()); }
	ruleProcessThenBlock
	{ after(grammarAccess.getProcessIfAccess().getProcessThenBlockParserRuleCall_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessThenBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessThenBlock__Group__0__Impl
	rule__ProcessThenBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessThenBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessThenBlockAccess().getLeftCurlyBracketKeyword_0()); }
	LeftCurlyBracket
	{ after(grammarAccess.getProcessThenBlockAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessThenBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessThenBlock__Group__1__Impl
	rule__ProcessThenBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessThenBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessThenBlockAccess().getActionAssignment_1()); }
	(rule__ProcessThenBlock__ActionAssignment_1)
	{ after(grammarAccess.getProcessThenBlockAccess().getActionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessThenBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessThenBlock__Group__2__Impl
	rule__ProcessThenBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessThenBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessThenBlockAccess().getThenAssignment_2()); }
	(rule__ProcessThenBlock__ThenAssignment_2)
	{ after(grammarAccess.getProcessThenBlockAccess().getThenAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessThenBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessThenBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessThenBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessThenBlockAccess().getRightCurlyBracketKeyword_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getProcessThenBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PTBThen__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PTBThen__Group__0__Impl
	rule__PTBThen__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PTBThen__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPTBThenAccess().getProcessBlockAction_0()); }
	()
	{ after(grammarAccess.getPTBThenAccess().getProcessBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PTBThen__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PTBThen__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PTBThen__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPTBThenAccess().getStatementsAssignment_1()); }
	(rule__PTBThen__StatementsAssignment_1)*
	{ after(grammarAccess.getPTBThenAccess().getStatementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSet__Group__0__Impl
	rule__ProcessSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSetAccess().getSetKeyword_0()); }
	Set
	{ after(grammarAccess.getProcessSetAccess().getSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSet__Group__1__Impl
	rule__ProcessSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSetAccess().getUpdateAssignment_1()); }
	(rule__ProcessSet__UpdateAssignment_1)
	{ after(grammarAccess.getProcessSetAccess().getUpdateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSet__Group__2__Impl
	rule__ProcessSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSetAccess().getPrintAssignment_2()); }
	(rule__ProcessSet__PrintAssignment_2)?
	{ after(grammarAccess.getProcessSetAccess().getPrintAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessSet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessSetAccess().getSemicolonKeyword_3()); }
	Semicolon
	{ after(grammarAccess.getProcessSetAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessWaitFor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessWaitFor__Group__0__Impl
	rule__ProcessWaitFor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessWaitForAccess().getWaitforKeyword_0()); }
	Waitfor
	{ after(grammarAccess.getProcessWaitForAccess().getWaitforKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessWaitFor__Group__1__Impl
	rule__ProcessWaitFor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessWaitForAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getProcessWaitForAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessWaitFor__Group__2__Impl
	rule__ProcessWaitFor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessWaitForAccess().getCondAssignment_2()); }
	(rule__ProcessWaitFor__CondAssignment_2)
	{ after(grammarAccess.getProcessWaitForAccess().getCondAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessWaitFor__Group__3__Impl
	rule__ProcessWaitFor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessWaitForAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getProcessWaitForAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessWaitFor__Group__4__Impl
	rule__ProcessWaitFor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessWaitForAccess().getUpdateAssignment_4()); }
	(rule__ProcessWaitFor__UpdateAssignment_4)
	{ after(grammarAccess.getProcessWaitForAccess().getUpdateAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessWaitFor__Group__5__Impl
	rule__ProcessWaitFor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessWaitForAccess().getPrintAssignment_5()); }
	(rule__ProcessWaitFor__PrintAssignment_5)?
	{ after(grammarAccess.getProcessWaitForAccess().getPrintAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessWaitFor__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessWaitForAccess().getSemicolonKeyword_6()); }
	Semicolon
	{ after(grammarAccess.getProcessWaitForAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessLoop__Group__0__Impl
	rule__ProcessLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessLoopAccess().getLoopKeyword_0()); }
	Loop
	{ after(grammarAccess.getProcessLoopAccess().getLoopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessLoop__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessLoopAccess().getBlockAssignment_1()); }
	(rule__ProcessLoop__BlockAssignment_1)
	{ after(grammarAccess.getProcessLoopAccess().getBlockAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__0__Impl
	rule__Update__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getUpdateAction_0()); }
	()
	{ after(grammarAccess.getUpdateAccess().getUpdateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getGroup_1()); }
	(rule__Update__Group_1__0)?
	{ after(grammarAccess.getUpdateAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_1__0__Impl
	rule__Update__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getLeftSquareBracketKeyword_1_0()); }
	LeftSquareBracket
	{ after(grammarAccess.getUpdateAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_1__1__Impl
	rule__Update__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getAttributeAssignment_1_1()); }
	(rule__Update__AttributeAssignment_1_1)
	{ after(grammarAccess.getUpdateAccess().getAttributeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_1__2__Impl
	rule__Update__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getColonEqualsSignKeyword_1_2()); }
	ColonEqualsSign
	{ after(grammarAccess.getUpdateAccess().getColonEqualsSignKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_1__3__Impl
	rule__Update__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getValueAssignment_1_3()); }
	(rule__Update__ValueAssignment_1_3)
	{ after(grammarAccess.getUpdateAccess().getValueAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_1__4__Impl
	rule__Update__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getGroup_1_4()); }
	(rule__Update__Group_1_4__0)*
	{ after(grammarAccess.getUpdateAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getRightSquareBracketKeyword_1_5()); }
	RightSquareBracket
	{ after(grammarAccess.getUpdateAccess().getRightSquareBracketKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_1_4__0__Impl
	rule__Update__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getCommaKeyword_1_4_0()); }
	Comma
	{ after(grammarAccess.getUpdateAccess().getCommaKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_1_4__1__Impl
	rule__Update__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getAttributeAssignment_1_4_1()); }
	(rule__Update__AttributeAssignment_1_4_1)
	{ after(grammarAccess.getUpdateAccess().getAttributeAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_1_4__2__Impl
	rule__Update__Group_1_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getColonEqualsSignKeyword_1_4_2()); }
	ColonEqualsSign
	{ after(grammarAccess.getUpdateAccess().getColonEqualsSignKeyword_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_1_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_1_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getValueAssignment_1_4_3()); }
	(rule__Update__ValueAssignment_1_4_3)
	{ after(grammarAccess.getUpdateAccess().getValueAssignment_1_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateComponentAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateComponentAttribute__Group__0__Impl
	rule__UpdateComponentAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateComponentAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateComponentAttributeAccess().getCompKeyword_0()); }
	Comp
	{ after(grammarAccess.getUpdateComponentAttributeAccess().getCompKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateComponentAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateComponentAttribute__Group__1__Impl
	rule__UpdateComponentAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateComponentAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateComponentAttributeAccess().getFullStopKeyword_1()); }
	FullStop
	{ after(grammarAccess.getUpdateComponentAttributeAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateComponentAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateComponentAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateComponentAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateComponentAttributeAccess().getAtnameAssignment_2()); }
	(rule__UpdateComponentAttribute__AtnameAssignment_2)
	{ after(grammarAccess.getUpdateComponentAttributeAccess().getAtnameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateLocalAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateLocalAttribute__Group__0__Impl
	rule__UpdateLocalAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateLocalAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateLocalAttributeAccess().getProcKeyword_0()); }
	Proc
	{ after(grammarAccess.getUpdateLocalAttributeAccess().getProcKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateLocalAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateLocalAttribute__Group__1__Impl
	rule__UpdateLocalAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateLocalAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateLocalAttributeAccess().getFullStopKeyword_1()); }
	FullStop
	{ after(grammarAccess.getUpdateLocalAttributeAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateLocalAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateLocalAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateLocalAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateLocalAttributeAccess().getAtnameAssignment_2()); }
	(rule__UpdateLocalAttribute__AtnameAssignment_2)
	{ after(grammarAccess.getUpdateLocalAttributeAccess().getAtnameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrintFormattedStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintFormattedStatement__Group__0__Impl
	rule__PrintFormattedStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintFormattedStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintFormattedStatementAccess().getPrintKeyword_0()); }
	Print
	{ after(grammarAccess.getPrintFormattedStatementAccess().getPrintKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintFormattedStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintFormattedStatement__Group__1__Impl
	rule__PrintFormattedStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintFormattedStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintFormattedStatementAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getPrintFormattedStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintFormattedStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintFormattedStatement__Group__2__Impl
	rule__PrintFormattedStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintFormattedStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintFormattedStatementAccess().getToPrintAssignment_2()); }
	(rule__PrintFormattedStatement__ToPrintAssignment_2)
	{ after(grammarAccess.getPrintFormattedStatementAccess().getToPrintAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintFormattedStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintFormattedStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintFormattedStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintFormattedStatementAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getPrintFormattedStatementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnvInitValue__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvInitValue__Group_0__0__Impl
	rule__EnvInitValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvInitValueAccess().getNegativeIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getEnvInitValueAccess().getNegativeIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvInitValue__Group_0__1__Impl
	rule__EnvInitValue__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvInitValueAccess().getHyphenMinusKeyword_0_1()); }
	HyphenMinus
	{ after(grammarAccess.getEnvInitValueAccess().getHyphenMinusKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvInitValue__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvInitValueAccess().getNegvalueAssignment_0_2()); }
	(rule__EnvInitValue__NegvalueAssignment_0_2)
	{ after(grammarAccess.getEnvInitValueAccess().getNegvalueAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnvInitValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvInitValue__Group_1__0__Impl
	rule__EnvInitValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvInitValueAccess().getIntConstantAction_1_0()); }
	()
	{ after(grammarAccess.getEnvInitValueAccess().getIntConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvInitValue__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvInitValueAccess().getValueAssignment_1_1()); }
	(rule__EnvInitValue__ValueAssignment_1_1)
	{ after(grammarAccess.getEnvInitValueAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnvInitValue__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvInitValue__Group_2__0__Impl
	rule__EnvInitValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvInitValueAccess().getStringConstantAction_2_0()); }
	()
	{ after(grammarAccess.getEnvInitValueAccess().getStringConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvInitValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvInitValueAccess().getValueAssignment_2_1()); }
	(rule__EnvInitValue__ValueAssignment_2_1)
	{ after(grammarAccess.getEnvInitValueAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnvInitValue__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvInitValue__Group_3__0__Impl
	rule__EnvInitValue__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvInitValueAccess().getBoolConstantAction_3_0()); }
	()
	{ after(grammarAccess.getEnvInitValueAccess().getBoolConstantAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvInitValue__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvInitValueAccess().getValueAssignment_3_1()); }
	(rule__EnvInitValue__ValueAssignment_3_1)
	{ after(grammarAccess.getEnvInitValueAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__0__Impl
	rule__Environment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getEnvironmentAction_0()); }
	()
	{ after(grammarAccess.getEnvironmentAccess().getEnvironmentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__1__Impl
	rule__Environment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__2__Impl
	rule__Environment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getGroup_2()); }
	(rule__Environment__Group_2__0)?
	{ after(grammarAccess.getEnvironmentAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2__0__Impl
	rule__Environment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getAttrsAssignment_2_0()); }
	(rule__Environment__AttrsAssignment_2_0)
	{ after(grammarAccess.getEnvironmentAccess().getAttrsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2__1__Impl
	rule__Environment__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getColonEqualsSignKeyword_2_1()); }
	ColonEqualsSign
	{ after(grammarAccess.getEnvironmentAccess().getColonEqualsSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2__2__Impl
	rule__Environment__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getValsAssignment_2_2()); }
	(rule__Environment__ValsAssignment_2_2)
	{ after(grammarAccess.getEnvironmentAccess().getValsAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getGroup_2_3()); }
	(rule__Environment__Group_2_3__0)*
	{ after(grammarAccess.getEnvironmentAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2_3__0__Impl
	rule__Environment__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getCommaKeyword_2_3_0()); }
	Comma
	{ after(grammarAccess.getEnvironmentAccess().getCommaKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2_3__1__Impl
	rule__Environment__Group_2_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getAttrsAssignment_2_3_1()); }
	(rule__Environment__AttrsAssignment_2_3_1)
	{ after(grammarAccess.getEnvironmentAccess().getAttrsAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2_3__2__Impl
	rule__Environment__Group_2_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getColonEqualsSignKeyword_2_3_2()); }
	ColonEqualsSign
	{ after(grammarAccess.getEnvironmentAccess().getColonEqualsSignKeyword_2_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getValsAssignment_2_3_3()); }
	(rule__Environment__ValsAssignment_2_3_3)
	{ after(grammarAccess.getEnvironmentAccess().getValsAssignment_2_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentDefinition__Group__0__Impl
	rule__EnvironmentDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentDefinitionAccess().getEnvironmentKeyword_0()); }
	Environment
	{ after(grammarAccess.getEnvironmentDefinitionAccess().getEnvironmentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentDefinition__Group__1__Impl
	rule__EnvironmentDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentDefinitionAccess().getNameAssignment_1()); }
	(rule__EnvironmentDefinition__NameAssignment_1)
	{ after(grammarAccess.getEnvironmentDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentDefinitionAccess().getEnvAssignment_2()); }
	(rule__EnvironmentDefinition__EnvAssignment_2)
	{ after(grammarAccess.getEnvironmentDefinitionAccess().getEnvAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDefinition__Group__0__Impl
	rule__ComponentDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDefinitionAccess().getComponentKeyword_0()); }
	Component
	{ after(grammarAccess.getComponentDefinitionAccess().getComponentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDefinition__Group__1__Impl
	rule__ComponentDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDefinitionAccess().getAlternatives_1()); }
	(rule__ComponentDefinition__Alternatives_1)
	{ after(grammarAccess.getComponentDefinitionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDefinition__Group__2__Impl
	rule__ComponentDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDefinitionAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getComponentDefinitionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDefinitionAccess().getBlockAssignment_3()); }
	(rule__ComponentDefinition__BlockAssignment_3)
	{ after(grammarAccess.getComponentDefinitionAccess().getBlockAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrSubAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrSubAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	VerticalLineVerticalLine
	{ after(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getSubAssignment_1_2()); }
	(rule__Or__SubAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getSubAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
	ruleEquality
	{ after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndSubAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndSubAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
	AmpersandAmpersand
	{ after(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getSubAssignment_1_2()); }
	(rule__And__SubAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getSubAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__0__Impl
	rule__Equality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getGroup_1()); }
	(rule__Equality__Group_1__0)?
	{ after(grammarAccess.getEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__0__Impl
	rule__Equality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__1__Impl
	rule__Equality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); }
	(rule__Equality__OpAssignment_1_1)
	{ after(grammarAccess.getEqualityAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
	(rule__Equality__RightAssignment_1_2)
	{ after(grammarAccess.getEqualityAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
	rulePlusOrMinus
	{ after(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)?
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
	(rule__Comparison__OpAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
	(rule__Comparison__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__0__Impl
	rule__PlusOrMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
	ruleMulOrDiv
	{ after(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
	(rule__PlusOrMinus__Group_1__0)?
	{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__0__Impl
	rule__PlusOrMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
	(rule__PlusOrMinus__Alternatives_1_0)
	{ after(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
	(rule__PlusOrMinus__RightAssignment_1_1)
	{ after(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__0__Impl
	rule__PlusOrMinus__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
	PlusSign
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__0__Impl
	rule__PlusOrMinus__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
	HyphenMinus
	{ after(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_2__0__Impl
	rule__PlusOrMinus__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getConcatenateLeftAction_1_0_2_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getConcatenateLeftAction_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusSignPlusSignKeyword_1_0_2_1()); }
	PlusSignPlusSign
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusSignPlusSignKeyword_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__0__Impl
	rule__MulOrDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getGroup_1()); }
	(rule__MulOrDiv__Group_1__0)?
	{ after(grammarAccess.getMulOrDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__0__Impl
	rule__MulOrDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__1__Impl
	rule__MulOrDiv__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); }
	(rule__MulOrDiv__OpAssignment_1_1)
	{ after(grammarAccess.getMulOrDivAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); }
	(rule__MulOrDiv__RightAssignment_1_2)
	{ after(grammarAccess.getMulOrDivAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	LeftParenthesis
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
	RightParenthesis
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getUnaryMinusAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getUnaryMinusAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_1_1()); }
	HyphenMinus
	{ after(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
	(rule__Primary__ExpressionAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__0__Impl
	rule__Primary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNotAction_2_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNotAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__1__Impl
	rule__Primary__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_2_1()); }
	ExclamationMark
	{ after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); }
	(rule__Primary__ExpressionAssignment_2_2)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
	(rule__Atomic__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getStringConstantAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getStringConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
	(rule__Atomic__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getBoolConstantAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getBoolConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
	(rule__Atomic__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getLocalVarRefAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getLocalVarRefAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getRefAssignment_3_1()); }
	(rule__Atomic__RefAssignment_3_1)
	{ after(grammarAccess.getAtomicAccess().getRefAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__0__Impl
	rule__Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getLocalAttributeRefAction_4_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getLocalAttributeRefAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__1__Impl
	rule__Atomic__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getProcKeyword_4_1()); }
	Proc
	{ after(grammarAccess.getAtomicAccess().getProcKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__2__Impl
	rule__Atomic__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getFullStopKeyword_4_2()); }
	FullStop
	{ after(grammarAccess.getAtomicAccess().getFullStopKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getAttributeAssignment_4_3()); }
	(rule__Atomic__AttributeAssignment_4_3)
	{ after(grammarAccess.getAtomicAccess().getAttributeAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__0__Impl
	rule__Atomic__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getFunctionCallAction_5_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getFunctionCallAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__1__Impl
	rule__Atomic__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getFunctionAssignment_5_1()); }
	(rule__Atomic__FunctionAssignment_5_1)
	{ after(grammarAccess.getAtomicAccess().getFunctionAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__2__Impl
	rule__Atomic__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_5_2()); }
	LeftParenthesis
	{ after(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__3__Impl
	rule__Atomic__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getGroup_5_3()); }
	(rule__Atomic__Group_5_3__0)?
	{ after(grammarAccess.getAtomicAccess().getGroup_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_5_4()); }
	RightParenthesis
	{ after(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_5_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5_3__0__Impl
	rule__Atomic__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getParamsAssignment_5_3_0()); }
	(rule__Atomic__ParamsAssignment_5_3_0)
	{ after(grammarAccess.getAtomicAccess().getParamsAssignment_5_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getGroup_5_3_1()); }
	(rule__Atomic__Group_5_3_1__0)*
	{ after(grammarAccess.getAtomicAccess().getGroup_5_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_5_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5_3_1__0__Impl
	rule__Atomic__Group_5_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getCommaKeyword_5_3_1_0()); }
	Comma
	{ after(grammarAccess.getAtomicAccess().getCommaKeyword_5_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getParamsAssignment_5_3_1_1()); }
	(rule__Atomic__ParamsAssignment_5_3_1_1)
	{ after(grammarAccess.getAtomicAccess().getParamsAssignment_5_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_6__0__Impl
	rule__Atomic__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getComponentAttributeRefAction_6_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getComponentAttributeRefAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_6__1__Impl
	rule__Atomic__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getCompKeyword_6_1()); }
	Comp
	{ after(grammarAccess.getAtomicAccess().getCompKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_6__2__Impl
	rule__Atomic__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getFullStopKeyword_6_2()); }
	FullStop
	{ after(grammarAccess.getAtomicAccess().getFullStopKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getAttributeAssignment_6_3()); }
	(rule__Atomic__AttributeAssignment_6_3)
	{ after(grammarAccess.getAtomicAccess().getAttributeAssignment_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_7__0__Impl
	rule__Atomic__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getRecAttributeRefAction_7_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getRecAttributeRefAction_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_7__1__Impl
	rule__Atomic__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getReceiverKeyword_7_1()); }
	Receiver
	{ after(grammarAccess.getAtomicAccess().getReceiverKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_7__2__Impl
	rule__Atomic__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getFullStopKeyword_7_2()); }
	FullStop
	{ after(grammarAccess.getAtomicAccess().getFullStopKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getAttributeAssignment_7_3()); }
	(rule__Atomic__AttributeAssignment_7_3)
	{ after(grammarAccess.getAtomicAccess().getAttributeAssignment_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncParam__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncParam__Group__0__Impl
	rule__FuncParam__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncParam__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncParamAccess().getTypeAssignment_0()); }
	(rule__FuncParam__TypeAssignment_0)
	{ after(grammarAccess.getFuncParamAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncParam__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncParam__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncParam__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncParamAccess().getNameAssignment_1()); }
	(rule__FuncParam__NameAssignment_1)
	{ after(grammarAccess.getFuncParamAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefinition__Group__0__Impl
	rule__FuncDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefinitionAccess().getFunctionKeyword_0()); }
	Function
	{ after(grammarAccess.getFuncDefinitionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefinition__Group__1__Impl
	rule__FuncDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefinitionAccess().getTypeAssignment_1()); }
	(rule__FuncDefinition__TypeAssignment_1)
	{ after(grammarAccess.getFuncDefinitionAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefinition__Group__2__Impl
	rule__FuncDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefinitionAccess().getNameAssignment_2()); }
	(rule__FuncDefinition__NameAssignment_2)
	{ after(grammarAccess.getFuncDefinitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefinition__Group__3__Impl
	rule__FuncDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefinitionAccess().getLeftParenthesisKeyword_3()); }
	LeftParenthesis
	{ after(grammarAccess.getFuncDefinitionAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefinition__Group__4__Impl
	rule__FuncDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefinitionAccess().getGroup_4()); }
	(rule__FuncDefinition__Group_4__0)?
	{ after(grammarAccess.getFuncDefinitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefinition__Group__5__Impl
	rule__FuncDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefinitionAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getFuncDefinitionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefinition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefinitionAccess().getBlkAssignment_6()); }
	(rule__FuncDefinition__BlkAssignment_6)
	{ after(grammarAccess.getFuncDefinitionAccess().getBlkAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDefinition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefinition__Group_4__0__Impl
	rule__FuncDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefinitionAccess().getParamsAssignment_4_0()); }
	(rule__FuncDefinition__ParamsAssignment_4_0)
	{ after(grammarAccess.getFuncDefinitionAccess().getParamsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefinition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefinitionAccess().getGroup_4_1()); }
	(rule__FuncDefinition__Group_4_1__0)*
	{ after(grammarAccess.getFuncDefinitionAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDefinition__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefinition__Group_4_1__0__Impl
	rule__FuncDefinition__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefinitionAccess().getCommaKeyword_4_1_0()); }
	Comma
	{ after(grammarAccess.getFuncDefinitionAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncDefinition__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncDefinitionAccess().getParamsAssignment_4_1_1()); }
	(rule__FuncDefinition__ParamsAssignment_4_1_1)
	{ after(grammarAccess.getFuncDefinitionAccess().getParamsAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncBlock__Group__0__Impl
	rule__FuncBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncBlockAccess().getLeftCurlyBracketKeyword_0()); }
	LeftCurlyBracket
	{ after(grammarAccess.getFuncBlockAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncBlock__Group__1__Impl
	rule__FuncBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncBlockAccess().getFuncBlockAction_1()); }
	()
	{ after(grammarAccess.getFuncBlockAccess().getFuncBlockAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncBlock__Group__2__Impl
	rule__FuncBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncBlockAccess().getStatementsAssignment_2()); }
	(rule__FuncBlock__StatementsAssignment_2)*
	{ after(grammarAccess.getFuncBlockAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncBlockAccess().getRightCurlyBracketKeyword_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getFuncBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncVarDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncVarDeclaration__Group__0__Impl
	rule__FuncVarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncVarDeclarationAccess().getVarKeyword_0()); }
	Var
	{ after(grammarAccess.getFuncVarDeclarationAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncVarDeclaration__Group__1__Impl
	rule__FuncVarDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncVarDeclarationAccess().getNameAssignment_1()); }
	(rule__FuncVarDeclaration__NameAssignment_1)
	{ after(grammarAccess.getFuncVarDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncVarDeclaration__Group__2__Impl
	rule__FuncVarDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncVarDeclarationAccess().getEqualsSignKeyword_2()); }
	EqualsSign
	{ after(grammarAccess.getFuncVarDeclarationAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncVarDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncVarDeclarationAccess().getValAssignment_3()); }
	(rule__FuncVarDeclaration__ValAssignment_3)
	{ after(grammarAccess.getFuncVarDeclarationAccess().getValAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncVarAssign__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncVarAssign__Group__0__Impl
	rule__FuncVarAssign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarAssign__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncVarAssignAccess().getVarAssignment_0()); }
	(rule__FuncVarAssign__VarAssignment_0)
	{ after(grammarAccess.getFuncVarAssignAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarAssign__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncVarAssign__Group__1__Impl
	rule__FuncVarAssign__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarAssign__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncVarAssignAccess().getEqualsSignKeyword_1()); }
	EqualsSign
	{ after(grammarAccess.getFuncVarAssignAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarAssign__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncVarAssign__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarAssign__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncVarAssignAccess().getValAssignment_2()); }
	(rule__FuncVarAssign__ValAssignment_2)
	{ after(grammarAccess.getFuncVarAssignAccess().getValAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncIfElse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group__0__Impl
	rule__FuncIfElse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getIfKeyword_0()); }
	If
	{ after(grammarAccess.getFuncIfElseAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group__1__Impl
	rule__FuncIfElse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getFuncIfElseAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group__2__Impl
	rule__FuncIfElse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getTestAssignment_2()); }
	(rule__FuncIfElse__TestAssignment_2)
	{ after(grammarAccess.getFuncIfElseAccess().getTestAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group__3__Impl
	rule__FuncIfElse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getFuncIfElseAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group__4__Impl
	rule__FuncIfElse__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getThenAssignment_4()); }
	(rule__FuncIfElse__ThenAssignment_4)
	{ after(grammarAccess.getFuncIfElseAccess().getThenAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group__5__Impl
	rule__FuncIfElse__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getGroup_5()); }
	(rule__FuncIfElse__Group_5__0)*
	{ after(grammarAccess.getFuncIfElseAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getGroup_6()); }
	(rule__FuncIfElse__Group_6__0)?
	{ after(grammarAccess.getFuncIfElseAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncIfElse__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group_5__0__Impl
	rule__FuncIfElse__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getElseKeyword_5_0()); }
	Else
	{ after(grammarAccess.getFuncIfElseAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group_5__1__Impl
	rule__FuncIfElse__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getIfKeyword_5_1()); }
	If
	{ after(grammarAccess.getFuncIfElseAccess().getIfKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group_5__2__Impl
	rule__FuncIfElse__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getLeftParenthesisKeyword_5_2()); }
	LeftParenthesis
	{ after(grammarAccess.getFuncIfElseAccess().getLeftParenthesisKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group_5__3__Impl
	rule__FuncIfElse__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getTestAssignment_5_3()); }
	(rule__FuncIfElse__TestAssignment_5_3)
	{ after(grammarAccess.getFuncIfElseAccess().getTestAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group_5__4__Impl
	rule__FuncIfElse__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getRightParenthesisKeyword_5_4()); }
	RightParenthesis
	{ after(grammarAccess.getFuncIfElseAccess().getRightParenthesisKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group_5__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group_5__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group_5__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getThenAssignment_5_5()); }
	(rule__FuncIfElse__ThenAssignment_5_5)
	{ after(grammarAccess.getFuncIfElseAccess().getThenAssignment_5_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncIfElse__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group_6__0__Impl
	rule__FuncIfElse__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getElseKeyword_6_0()); }
	Else
	{ after(grammarAccess.getFuncIfElseAccess().getElseKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncIfElse__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncIfElseAccess().getElseBranchAssignment_6_1()); }
	(rule__FuncIfElse__ElseBranchAssignment_6_1)
	{ after(grammarAccess.getFuncIfElseAccess().getElseBranchAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncReturn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncReturn__Group__0__Impl
	rule__FuncReturn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncReturn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncReturnAccess().getReturnKeyword_0()); }
	Return
	{ after(grammarAccess.getFuncReturnAccess().getReturnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncReturn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncReturn__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncReturn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncReturnAccess().getValAssignment_1()); }
	(rule__FuncReturn__ValAssignment_1)
	{ after(grammarAccess.getFuncReturnAccess().getValAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__InfrastructureAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getInfrastructureInfrastructureCrossReference_2_0()); }
		(
			{ before(grammarAccess.getModelAccess().getInfrastructureInfrastructureIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getModelAccess().getInfrastructureInfrastructureIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getModelAccess().getInfrastructureInfrastructureCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ProcessesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getProcessesProcessDefinitionParserRuleCall_3_0_0()); }
		ruleProcessDefinition
		{ after(grammarAccess.getModelAccess().getProcessesProcessDefinitionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ComponentsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getComponentsComponentDefinitionParserRuleCall_3_1_0()); }
		ruleComponentDefinition
		{ after(grammarAccess.getModelAccess().getComponentsComponentDefinitionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FunctionsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFunctionsFuncDefinitionParserRuleCall_3_2_0()); }
		ruleFuncDefinition
		{ after(grammarAccess.getModelAccess().getFunctionsFuncDefinitionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__EnvironmentsAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEnvironmentsEnvironmentDefinitionParserRuleCall_3_3_0()); }
		ruleEnvironmentDefinition
		{ after(grammarAccess.getModelAccess().getEnvironmentsEnvironmentDefinitionParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProcessDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDefinition__BlockAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessDefinitionAccess().getBlockPDPBlockParserRuleCall_2_0_1_0()); }
		rulePDPBlock
		{ after(grammarAccess.getProcessDefinitionAccess().getBlockPDPBlockParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessDefinition__BlockAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessDefinitionAccess().getBlockProcessBlockParserRuleCall_2_1_0()); }
		ruleProcessBlock
		{ after(grammarAccess.getProcessDefinitionAccess().getBlockProcessBlockParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PDPBlock__StatementsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPDPBlockAccess().getStatementsPDPSpawnParserRuleCall_0_0_0()); }
		rulePDPSpawn
		{ after(grammarAccess.getPDPBlockAccess().getStatementsPDPSpawnParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PDPBlock__StatementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPDPBlockAccess().getStatementsPDPCallParserRuleCall_1_0()); }
		rulePDPCall
		{ after(grammarAccess.getPDPBlockAccess().getStatementsPDPCallParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PDPSpawn__ProcAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPDPSpawnAccess().getProcProcessDefinitionCrossReference_0()); }
		(
			{ before(grammarAccess.getPDPSpawnAccess().getProcProcessDefinitionIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPDPSpawnAccess().getProcProcessDefinitionIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getPDPSpawnAccess().getProcProcessDefinitionCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PDPCall__ProcAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPDPCallAccess().getProcProcessDefinitionCrossReference_0()); }
		(
			{ before(grammarAccess.getPDPCallAccess().getProcProcessDefinitionIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPDPCallAccess().getProcProcessDefinitionIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getPDPCallAccess().getProcProcessDefinitionCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessBlock__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessBlockAccess().getStatementsProcessStatementParserRuleCall_2_0()); }
		ruleProcessStatement
		{ after(grammarAccess.getProcessBlockAccess().getStatementsProcessStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSpawn__ProcAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessSpawnAccess().getProcProcessDefinitionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getProcessSpawnAccess().getProcProcessDefinitionIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProcessSpawnAccess().getProcProcessDefinitionIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getProcessSpawnAccess().getProcProcessDefinitionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessCall__ProcAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessCallAccess().getProcProcessDefinitionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getProcessCallAccess().getProcProcessDefinitionIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProcessCallAccess().getProcProcessDefinitionIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getProcessCallAccess().getProcProcessDefinitionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__MsgOutPartsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessSendAccess().getMsgOutPartsExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getProcessSendAccess().getMsgOutPartsExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__MsgOutPartsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessSendAccess().getMsgOutPartsExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getProcessSendAccess().getMsgOutPartsExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__Send_predAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessSendAccess().getSend_predExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getProcessSendAccess().getSend_predExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__UpdatesAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessSendAccess().getUpdatesUpdateParserRuleCall_8_0()); }
		ruleUpdate
		{ after(grammarAccess.getProcessSendAccess().getUpdatesUpdateParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSend__PrintAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessSendAccess().getPrintPrintStatementParserRuleCall_9_0()); }
		rulePrintStatement
		{ after(grammarAccess.getProcessSendAccess().getPrintPrintStatementParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveSingle__CasesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessReceiveSingleAccess().getCasesReceiveCaseParserRuleCall_1_0()); }
		ruleReceiveCase
		{ after(grammarAccess.getProcessReceiveSingleAccess().getCasesReceiveCaseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveSingle__ThenAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessReceiveSingleAccess().getThenEmptyProcessBlockParserRuleCall_3_0()); }
		ruleEmptyProcessBlock
		{ after(grammarAccess.getProcessReceiveSingleAccess().getThenEmptyProcessBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__CasesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessReceiveMultipleAccess().getCasesReceiveCaseParserRuleCall_2_1_0()); }
		ruleReceiveCase
		{ after(grammarAccess.getProcessReceiveMultipleAccess().getCasesReceiveCaseParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessReceiveMultiple__ThenAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessReceiveMultipleAccess().getThenProcessBlockParserRuleCall_2_3_0()); }
		ruleProcessBlock
		{ after(grammarAccess.getProcessReceiveMultipleAccess().getThenProcessBlockParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__CondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiveCaseAccess().getCondExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getReceiveCaseAccess().getCondExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__MsgInPartsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiveCaseAccess().getMsgInPartsIDTerminalRuleCall_4_0_0()); }
		RULE_ID
		{ after(grammarAccess.getReceiveCaseAccess().getMsgInPartsIDTerminalRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__MsgInPartsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiveCaseAccess().getMsgInPartsIDTerminalRuleCall_4_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getReceiveCaseAccess().getMsgInPartsIDTerminalRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__UpdatesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiveCaseAccess().getUpdatesUpdateParserRuleCall_6_0()); }
		ruleUpdate
		{ after(grammarAccess.getReceiveCaseAccess().getUpdatesUpdateParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiveCase__PrintAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiveCaseAccess().getPrintPrintStatementParserRuleCall_7_0()); }
		rulePrintStatement
		{ after(grammarAccess.getReceiveCaseAccess().getPrintPrintStatementParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__CondAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessIfAccess().getCondExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getProcessIfAccess().getCondExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessIf__CondAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessIfAccess().getCondExpressionParserRuleCall_5_3_0()); }
		ruleExpression
		{ after(grammarAccess.getProcessIfAccess().getCondExpressionParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessThenBlock__ActionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessThenBlockAccess().getActionAlternatives_1_0()); }
		(rule__ProcessThenBlock__ActionAlternatives_1_0)
		{ after(grammarAccess.getProcessThenBlockAccess().getActionAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessThenBlock__ThenAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessThenBlockAccess().getThenPTBThenParserRuleCall_2_0()); }
		rulePTBThen
		{ after(grammarAccess.getProcessThenBlockAccess().getThenPTBThenParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PTBThen__StatementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPTBThenAccess().getStatementsProcessStatementParserRuleCall_1_0()); }
		ruleProcessStatement
		{ after(grammarAccess.getPTBThenAccess().getStatementsProcessStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSet__UpdateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessSetAccess().getUpdateUpdateParserRuleCall_1_0()); }
		ruleUpdate
		{ after(grammarAccess.getProcessSetAccess().getUpdateUpdateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessSet__PrintAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessSetAccess().getPrintPrintStatementParserRuleCall_2_0()); }
		rulePrintStatement
		{ after(grammarAccess.getProcessSetAccess().getPrintPrintStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__CondAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessWaitForAccess().getCondExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getProcessWaitForAccess().getCondExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__UpdateAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessWaitForAccess().getUpdateUpdateParserRuleCall_4_0()); }
		ruleUpdate
		{ after(grammarAccess.getProcessWaitForAccess().getUpdateUpdateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessWaitFor__PrintAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessWaitForAccess().getPrintPrintStatementParserRuleCall_5_0()); }
		rulePrintStatement
		{ after(grammarAccess.getProcessWaitForAccess().getPrintPrintStatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessLoop__BlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessLoopAccess().getBlockProcessBlockParserRuleCall_1_0()); }
		ruleProcessBlock
		{ after(grammarAccess.getProcessLoopAccess().getBlockProcessBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__AttributeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getAttributeAlternatives_1_1_0()); }
		(rule__Update__AttributeAlternatives_1_1_0)
		{ after(grammarAccess.getUpdateAccess().getAttributeAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__ValueAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getValueExpressionParserRuleCall_1_3_0()); }
		ruleExpression
		{ after(grammarAccess.getUpdateAccess().getValueExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__AttributeAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getAttributeAlternatives_1_4_1_0()); }
		(rule__Update__AttributeAlternatives_1_4_1_0)
		{ after(grammarAccess.getUpdateAccess().getAttributeAlternatives_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__ValueAssignment_1_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getValueExpressionParserRuleCall_1_4_3_0()); }
		ruleExpression
		{ after(grammarAccess.getUpdateAccess().getValueExpressionParserRuleCall_1_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateComponentAttribute__AtnameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateComponentAttributeAccess().getAtnameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getUpdateComponentAttributeAccess().getAtnameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateLocalAttribute__AtnameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateLocalAttributeAccess().getAtnameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getUpdateLocalAttributeAccess().getAtnameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintFormattedStatement__ToPrintAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrintFormattedStatementAccess().getToPrintSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getPrintFormattedStatementAccess().getToPrintSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__NegvalueAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvInitValueAccess().getNegvalueINTTerminalRuleCall_0_2_0()); }
		RULE_INT
		{ after(grammarAccess.getEnvInitValueAccess().getNegvalueINTTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvInitValueAccess().getValueINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getEnvInitValueAccess().getValueINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvInitValueAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getEnvInitValueAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvInitValue__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvInitValueAccess().getValueAlternatives_3_1_0()); }
		(rule__EnvInitValue__ValueAlternatives_3_1_0)
		{ after(grammarAccess.getEnvInitValueAccess().getValueAlternatives_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__AttrsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentAccess().getAttrsIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEnvironmentAccess().getAttrsIDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__ValsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentAccess().getValsEnvInitValueParserRuleCall_2_2_0()); }
		ruleEnvInitValue
		{ after(grammarAccess.getEnvironmentAccess().getValsEnvInitValueParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__AttrsAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentAccess().getAttrsIDTerminalRuleCall_2_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnvironmentAccess().getAttrsIDTerminalRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__ValsAssignment_2_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentAccess().getValsEnvInitValueParserRuleCall_2_3_3_0()); }
		ruleEnvInitValue
		{ after(grammarAccess.getEnvironmentAccess().getValsEnvInitValueParserRuleCall_2_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnvironmentDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentDefinition__EnvAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentDefinitionAccess().getEnvEnvironmentParserRuleCall_2_0()); }
		ruleEnvironment
		{ after(grammarAccess.getEnvironmentDefinitionAccess().getEnvEnvironmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDefinition__EnvrefAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDefinitionAccess().getEnvrefEnvironmentDefinitionCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getComponentDefinitionAccess().getEnvrefEnvironmentDefinitionIDTerminalRuleCall_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getComponentDefinitionAccess().getEnvrefEnvironmentDefinitionIDTerminalRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getComponentDefinitionAccess().getEnvrefEnvironmentDefinitionCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDefinition__EnvAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDefinitionAccess().getEnvEnvironmentParserRuleCall_1_1_0()); }
		ruleEnvironment
		{ after(grammarAccess.getComponentDefinitionAccess().getEnvEnvironmentParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDefinition__BlockAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDefinitionAccess().getBlockAlternatives_3_0()); }
		(rule__ComponentDefinition__BlockAlternatives_3_0)
		{ after(grammarAccess.getComponentDefinitionAccess().getBlockAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__SubAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getSubAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getSubAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__SubAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getSubEqualityParserRuleCall_1_2_0()); }
		ruleEquality
		{ after(grammarAccess.getAndAccess().getSubEqualityParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); }
		(rule__Equality__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
		ruleComparison
		{ after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
		(rule__Comparison__OpAlternatives_1_1_0)
		{ after(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
		rulePlusOrMinus
		{ after(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); }
		ruleMulOrDiv
		{ after(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); }
		(rule__MulOrDiv__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMulOrDivAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueAlternatives_2_1_0()); }
		(rule__Atomic__ValueAlternatives_2_1_0)
		{ after(grammarAccess.getAtomicAccess().getValueAlternatives_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__RefAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getRefLRefCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getAtomicAccess().getRefLRefIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAtomicAccess().getRefLRefIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getAtomicAccess().getRefLRefCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__AttributeAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getAttributeIDTerminalRuleCall_4_3_0()); }
		RULE_ID
		{ after(grammarAccess.getAtomicAccess().getAttributeIDTerminalRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__FunctionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getFunctionFuncDefinitionCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getAtomicAccess().getFunctionFuncDefinitionIDTerminalRuleCall_5_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAtomicAccess().getFunctionFuncDefinitionIDTerminalRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getAtomicAccess().getFunctionFuncDefinitionCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ParamsAssignment_5_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getParamsExpressionParserRuleCall_5_3_0_0()); }
		ruleExpression
		{ after(grammarAccess.getAtomicAccess().getParamsExpressionParserRuleCall_5_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ParamsAssignment_5_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getParamsExpressionParserRuleCall_5_3_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getAtomicAccess().getParamsExpressionParserRuleCall_5_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__AttributeAssignment_6_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getAttributeIDTerminalRuleCall_6_3_0()); }
		RULE_ID
		{ after(grammarAccess.getAtomicAccess().getAttributeIDTerminalRuleCall_6_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__AttributeAssignment_7_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getAttributeIDTerminalRuleCall_7_3_0()); }
		RULE_ID
		{ after(grammarAccess.getAtomicAccess().getAttributeIDTerminalRuleCall_7_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncParam__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncParamAccess().getTypeTYPETerminalRuleCall_0_0()); }
		RULE_TYPE
		{ after(grammarAccess.getFuncParamAccess().getTypeTYPETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncParam__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncParamAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFuncParamAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncDefinitionAccess().getTypeTYPETerminalRuleCall_1_0()); }
		RULE_TYPE
		{ after(grammarAccess.getFuncDefinitionAccess().getTypeTYPETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFuncDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__ParamsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncDefinitionAccess().getParamsFuncParamParserRuleCall_4_0_0()); }
		ruleFuncParam
		{ after(grammarAccess.getFuncDefinitionAccess().getParamsFuncParamParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__ParamsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncDefinitionAccess().getParamsFuncParamParserRuleCall_4_1_1_0()); }
		ruleFuncParam
		{ after(grammarAccess.getFuncDefinitionAccess().getParamsFuncParamParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDefinition__BlkAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncDefinitionAccess().getBlkFuncBlockParserRuleCall_6_0()); }
		ruleFuncBlock
		{ after(grammarAccess.getFuncDefinitionAccess().getBlkFuncBlockParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncBlock__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncBlockAccess().getStatementsFuncStatementParserRuleCall_2_0()); }
		ruleFuncStatement
		{ after(grammarAccess.getFuncBlockAccess().getStatementsFuncStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFuncVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarDeclaration__ValAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncVarDeclarationAccess().getValExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getFuncVarDeclarationAccess().getValExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarAssign__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncVarAssignAccess().getVarFuncVarDeclarationCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFuncVarAssignAccess().getVarFuncVarDeclarationIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFuncVarAssignAccess().getVarFuncVarDeclarationIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFuncVarAssignAccess().getVarFuncVarDeclarationCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVarAssign__ValAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncVarAssignAccess().getValExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFuncVarAssignAccess().getValExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__TestAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncIfElseAccess().getTestExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFuncIfElseAccess().getTestExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__ThenAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncIfElseAccess().getThenFuncBlockParserRuleCall_4_0()); }
		ruleFuncBlock
		{ after(grammarAccess.getFuncIfElseAccess().getThenFuncBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__TestAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncIfElseAccess().getTestExpressionParserRuleCall_5_3_0()); }
		ruleExpression
		{ after(grammarAccess.getFuncIfElseAccess().getTestExpressionParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__ThenAssignment_5_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncIfElseAccess().getThenFuncBlockParserRuleCall_5_5_0()); }
		ruleFuncBlock
		{ after(grammarAccess.getFuncIfElseAccess().getThenFuncBlockParserRuleCall_5_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncIfElse__ElseBranchAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncIfElseAccess().getElseBranchFuncBlockParserRuleCall_6_1_0()); }
		ruleFuncBlock
		{ after(grammarAccess.getFuncIfElseAccess().getElseBranchFuncBlockParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncReturn__ValAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncReturnAccess().getValExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFuncReturnAccess().getValExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
