/**
 * generated by Xtext 2.12.0
 */
package com.sysma.goat.eclipse_plugin.goatComponents.impl;

import com.sysma.goat.eclipse_plugin.goatComponents.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class GoatComponentsFactoryImpl extends EFactoryImpl implements GoatComponentsFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static GoatComponentsFactory init()
  {
    try
    {
      GoatComponentsFactory theGoatComponentsFactory = (GoatComponentsFactory)EPackage.Registry.INSTANCE.getEFactory(GoatComponentsPackage.eNS_URI);
      if (theGoatComponentsFactory != null)
      {
        return theGoatComponentsFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new GoatComponentsFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GoatComponentsFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case GoatComponentsPackage.MODEL: return createModel();
      case GoatComponentsPackage.PROCESS_DEFINITION: return createProcessDefinition();
      case GoatComponentsPackage.PROCESS_BLOCK: return createProcessBlock();
      case GoatComponentsPackage.PROCESS_SPAWN: return createProcessSpawn();
      case GoatComponentsPackage.PROCESS_CALL: return createProcessCall();
      case GoatComponentsPackage.PROCESS_STATEMENT: return createProcessStatement();
      case GoatComponentsPackage.PROCESS_SEND: return createProcessSend();
      case GoatComponentsPackage.PROCESS_RECEIVE: return createProcessReceive();
      case GoatComponentsPackage.PROCESS_RECEIVE_SINGLE: return createProcessReceiveSingle();
      case GoatComponentsPackage.PROCESS_RECEIVE_MULTIPLE: return createProcessReceiveMultiple();
      case GoatComponentsPackage.RECEIVE_CASE: return createReceiveCase();
      case GoatComponentsPackage.PROCESS_IF: return createProcessIf();
      case GoatComponentsPackage.PROCESS_THEN_BLOCK: return createProcessThenBlock();
      case GoatComponentsPackage.PROCESS_SET: return createProcessSet();
      case GoatComponentsPackage.PROCESS_WAIT_FOR: return createProcessWaitFor();
      case GoatComponentsPackage.PROCESS_LOOP: return createProcessLoop();
      case GoatComponentsPackage.UPDATE: return createUpdate();
      case GoatComponentsPackage.UPDATE_COMPONENT_ATTRIBUTE: return createUpdateComponentAttribute();
      case GoatComponentsPackage.UPDATE_LOCAL_ATTRIBUTE: return createUpdateLocalAttribute();
      case GoatComponentsPackage.PRINT_STATEMENT: return createPrintStatement();
      case GoatComponentsPackage.PRINT_ALL_STATEMENT: return createPrintAllStatement();
      case GoatComponentsPackage.PRINT_FORMATTED_STATEMENT: return createPrintFormattedStatement();
      case GoatComponentsPackage.EXPRESSION: return createExpression();
      case GoatComponentsPackage.ENVIRONMENT: return createEnvironment();
      case GoatComponentsPackage.ENVIRONMENT_DEFINITION: return createEnvironmentDefinition();
      case GoatComponentsPackage.COMPONENT_DEFINITION: return createComponentDefinition();
      case GoatComponentsPackage.LREF: return createLRef();
      case GoatComponentsPackage.FUNC_PARAM: return createFuncParam();
      case GoatComponentsPackage.FUNC_DEFINITION: return createFuncDefinition();
      case GoatComponentsPackage.FUNC_BLOCK: return createFuncBlock();
      case GoatComponentsPackage.FUNC_STATEMENT: return createFuncStatement();
      case GoatComponentsPackage.FUNC_VAR_DECLARATION: return createFuncVarDeclaration();
      case GoatComponentsPackage.FUNC_VAR_ASSIGN: return createFuncVarAssign();
      case GoatComponentsPackage.FUNC_IF_ELSE: return createFuncIfElse();
      case GoatComponentsPackage.FUNC_RETURN: return createFuncReturn();
      case GoatComponentsPackage.NEGATIVE_INT_CONSTANT: return createNegativeIntConstant();
      case GoatComponentsPackage.INT_CONSTANT: return createIntConstant();
      case GoatComponentsPackage.STRING_CONSTANT: return createStringConstant();
      case GoatComponentsPackage.BOOL_CONSTANT: return createBoolConstant();
      case GoatComponentsPackage.OR: return createOr();
      case GoatComponentsPackage.AND: return createAnd();
      case GoatComponentsPackage.EQUALITY: return createEquality();
      case GoatComponentsPackage.COMPARISON: return createComparison();
      case GoatComponentsPackage.PLUS: return createPlus();
      case GoatComponentsPackage.MINUS: return createMinus();
      case GoatComponentsPackage.CONCATENATE: return createConcatenate();
      case GoatComponentsPackage.MUL_OR_DIV: return createMulOrDiv();
      case GoatComponentsPackage.UNARY_MINUS: return createUnaryMinus();
      case GoatComponentsPackage.NOT: return createNot();
      case GoatComponentsPackage.LOCAL_VAR_REF: return createLocalVarRef();
      case GoatComponentsPackage.LOCAL_ATTRIBUTE_REF: return createLocalAttributeRef();
      case GoatComponentsPackage.FUNCTION_CALL: return createFunctionCall();
      case GoatComponentsPackage.COMPONENT_ATTRIBUTE_REF: return createComponentAttributeRef();
      case GoatComponentsPackage.REC_ATTRIBUTE_REF: return createRecAttributeRef();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessDefinition createProcessDefinition()
  {
    ProcessDefinitionImpl processDefinition = new ProcessDefinitionImpl();
    return processDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessBlock createProcessBlock()
  {
    ProcessBlockImpl processBlock = new ProcessBlockImpl();
    return processBlock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessSpawn createProcessSpawn()
  {
    ProcessSpawnImpl processSpawn = new ProcessSpawnImpl();
    return processSpawn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessCall createProcessCall()
  {
    ProcessCallImpl processCall = new ProcessCallImpl();
    return processCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessStatement createProcessStatement()
  {
    ProcessStatementImpl processStatement = new ProcessStatementImpl();
    return processStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessSend createProcessSend()
  {
    ProcessSendImpl processSend = new ProcessSendImpl();
    return processSend;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessReceive createProcessReceive()
  {
    ProcessReceiveImpl processReceive = new ProcessReceiveImpl();
    return processReceive;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessReceiveSingle createProcessReceiveSingle()
  {
    ProcessReceiveSingleImpl processReceiveSingle = new ProcessReceiveSingleImpl();
    return processReceiveSingle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessReceiveMultiple createProcessReceiveMultiple()
  {
    ProcessReceiveMultipleImpl processReceiveMultiple = new ProcessReceiveMultipleImpl();
    return processReceiveMultiple;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ReceiveCase createReceiveCase()
  {
    ReceiveCaseImpl receiveCase = new ReceiveCaseImpl();
    return receiveCase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessIf createProcessIf()
  {
    ProcessIfImpl processIf = new ProcessIfImpl();
    return processIf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessThenBlock createProcessThenBlock()
  {
    ProcessThenBlockImpl processThenBlock = new ProcessThenBlockImpl();
    return processThenBlock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessSet createProcessSet()
  {
    ProcessSetImpl processSet = new ProcessSetImpl();
    return processSet;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessWaitFor createProcessWaitFor()
  {
    ProcessWaitForImpl processWaitFor = new ProcessWaitForImpl();
    return processWaitFor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProcessLoop createProcessLoop()
  {
    ProcessLoopImpl processLoop = new ProcessLoopImpl();
    return processLoop;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Update createUpdate()
  {
    UpdateImpl update = new UpdateImpl();
    return update;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UpdateComponentAttribute createUpdateComponentAttribute()
  {
    UpdateComponentAttributeImpl updateComponentAttribute = new UpdateComponentAttributeImpl();
    return updateComponentAttribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UpdateLocalAttribute createUpdateLocalAttribute()
  {
    UpdateLocalAttributeImpl updateLocalAttribute = new UpdateLocalAttributeImpl();
    return updateLocalAttribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrintStatement createPrintStatement()
  {
    PrintStatementImpl printStatement = new PrintStatementImpl();
    return printStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrintAllStatement createPrintAllStatement()
  {
    PrintAllStatementImpl printAllStatement = new PrintAllStatementImpl();
    return printAllStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrintFormattedStatement createPrintFormattedStatement()
  {
    PrintFormattedStatementImpl printFormattedStatement = new PrintFormattedStatementImpl();
    return printFormattedStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Environment createEnvironment()
  {
    EnvironmentImpl environment = new EnvironmentImpl();
    return environment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnvironmentDefinition createEnvironmentDefinition()
  {
    EnvironmentDefinitionImpl environmentDefinition = new EnvironmentDefinitionImpl();
    return environmentDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentDefinition createComponentDefinition()
  {
    ComponentDefinitionImpl componentDefinition = new ComponentDefinitionImpl();
    return componentDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LRef createLRef()
  {
    LRefImpl lRef = new LRefImpl();
    return lRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FuncParam createFuncParam()
  {
    FuncParamImpl funcParam = new FuncParamImpl();
    return funcParam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FuncDefinition createFuncDefinition()
  {
    FuncDefinitionImpl funcDefinition = new FuncDefinitionImpl();
    return funcDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FuncBlock createFuncBlock()
  {
    FuncBlockImpl funcBlock = new FuncBlockImpl();
    return funcBlock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FuncStatement createFuncStatement()
  {
    FuncStatementImpl funcStatement = new FuncStatementImpl();
    return funcStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FuncVarDeclaration createFuncVarDeclaration()
  {
    FuncVarDeclarationImpl funcVarDeclaration = new FuncVarDeclarationImpl();
    return funcVarDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FuncVarAssign createFuncVarAssign()
  {
    FuncVarAssignImpl funcVarAssign = new FuncVarAssignImpl();
    return funcVarAssign;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FuncIfElse createFuncIfElse()
  {
    FuncIfElseImpl funcIfElse = new FuncIfElseImpl();
    return funcIfElse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FuncReturn createFuncReturn()
  {
    FuncReturnImpl funcReturn = new FuncReturnImpl();
    return funcReturn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NegativeIntConstant createNegativeIntConstant()
  {
    NegativeIntConstantImpl negativeIntConstant = new NegativeIntConstantImpl();
    return negativeIntConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntConstant createIntConstant()
  {
    IntConstantImpl intConstant = new IntConstantImpl();
    return intConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringConstant createStringConstant()
  {
    StringConstantImpl stringConstant = new StringConstantImpl();
    return stringConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BoolConstant createBoolConstant()
  {
    BoolConstantImpl boolConstant = new BoolConstantImpl();
    return boolConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Or createOr()
  {
    OrImpl or = new OrImpl();
    return or;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public And createAnd()
  {
    AndImpl and = new AndImpl();
    return and;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Equality createEquality()
  {
    EqualityImpl equality = new EqualityImpl();
    return equality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Comparison createComparison()
  {
    ComparisonImpl comparison = new ComparisonImpl();
    return comparison;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Plus createPlus()
  {
    PlusImpl plus = new PlusImpl();
    return plus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Minus createMinus()
  {
    MinusImpl minus = new MinusImpl();
    return minus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Concatenate createConcatenate()
  {
    ConcatenateImpl concatenate = new ConcatenateImpl();
    return concatenate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MulOrDiv createMulOrDiv()
  {
    MulOrDivImpl mulOrDiv = new MulOrDivImpl();
    return mulOrDiv;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UnaryMinus createUnaryMinus()
  {
    UnaryMinusImpl unaryMinus = new UnaryMinusImpl();
    return unaryMinus;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Not createNot()
  {
    NotImpl not = new NotImpl();
    return not;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LocalVarRef createLocalVarRef()
  {
    LocalVarRefImpl localVarRef = new LocalVarRefImpl();
    return localVarRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LocalAttributeRef createLocalAttributeRef()
  {
    LocalAttributeRefImpl localAttributeRef = new LocalAttributeRefImpl();
    return localAttributeRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionCall createFunctionCall()
  {
    FunctionCallImpl functionCall = new FunctionCallImpl();
    return functionCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentAttributeRef createComponentAttributeRef()
  {
    ComponentAttributeRefImpl componentAttributeRef = new ComponentAttributeRefImpl();
    return componentAttributeRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RecAttributeRef createRecAttributeRef()
  {
    RecAttributeRefImpl recAttributeRef = new RecAttributeRefImpl();
    return recAttributeRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GoatComponentsPackage getGoatComponentsPackage()
  {
    return (GoatComponentsPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static GoatComponentsPackage getPackage()
  {
    return GoatComponentsPackage.eINSTANCE;
  }

} //GoatComponentsFactoryImpl
