/**
 * generated by Xtext 2.12.0
 */
package com.sysma.goat.eclipse_plugin.goatComponents.util;

import com.sysma.goat.eclipse_plugin.goatComponents.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see com.sysma.goat.eclipse_plugin.goatComponents.GoatComponentsPackage
 * @generated
 */
public class GoatComponentsAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static GoatComponentsPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GoatComponentsAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = GoatComponentsPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GoatComponentsSwitch<Adapter> modelSwitch =
    new GoatComponentsSwitch<Adapter>()
    {
      @Override
      public Adapter caseModel(Model object)
      {
        return createModelAdapter();
      }
      @Override
      public Adapter caseProcessDefinition(ProcessDefinition object)
      {
        return createProcessDefinitionAdapter();
      }
      @Override
      public Adapter caseProcessBlock(ProcessBlock object)
      {
        return createProcessBlockAdapter();
      }
      @Override
      public Adapter caseProcessSpawn(ProcessSpawn object)
      {
        return createProcessSpawnAdapter();
      }
      @Override
      public Adapter caseProcessCall(ProcessCall object)
      {
        return createProcessCallAdapter();
      }
      @Override
      public Adapter caseProcessStatement(ProcessStatement object)
      {
        return createProcessStatementAdapter();
      }
      @Override
      public Adapter caseProcessSend(ProcessSend object)
      {
        return createProcessSendAdapter();
      }
      @Override
      public Adapter caseProcessReceive(ProcessReceive object)
      {
        return createProcessReceiveAdapter();
      }
      @Override
      public Adapter caseProcessReceiveSingle(ProcessReceiveSingle object)
      {
        return createProcessReceiveSingleAdapter();
      }
      @Override
      public Adapter caseProcessReceiveMultiple(ProcessReceiveMultiple object)
      {
        return createProcessReceiveMultipleAdapter();
      }
      @Override
      public Adapter caseReceiveCase(ReceiveCase object)
      {
        return createReceiveCaseAdapter();
      }
      @Override
      public Adapter caseProcessIf(ProcessIf object)
      {
        return createProcessIfAdapter();
      }
      @Override
      public Adapter caseProcessThenBlock(ProcessThenBlock object)
      {
        return createProcessThenBlockAdapter();
      }
      @Override
      public Adapter caseProcessSet(ProcessSet object)
      {
        return createProcessSetAdapter();
      }
      @Override
      public Adapter caseProcessWaitFor(ProcessWaitFor object)
      {
        return createProcessWaitForAdapter();
      }
      @Override
      public Adapter caseProcessLoop(ProcessLoop object)
      {
        return createProcessLoopAdapter();
      }
      @Override
      public Adapter caseUpdate(Update object)
      {
        return createUpdateAdapter();
      }
      @Override
      public Adapter caseUpdateComponentAttribute(UpdateComponentAttribute object)
      {
        return createUpdateComponentAttributeAdapter();
      }
      @Override
      public Adapter caseUpdateLocalAttribute(UpdateLocalAttribute object)
      {
        return createUpdateLocalAttributeAdapter();
      }
      @Override
      public Adapter casePrintStatement(PrintStatement object)
      {
        return createPrintStatementAdapter();
      }
      @Override
      public Adapter casePrintAllStatement(PrintAllStatement object)
      {
        return createPrintAllStatementAdapter();
      }
      @Override
      public Adapter casePrintFormattedStatement(PrintFormattedStatement object)
      {
        return createPrintFormattedStatementAdapter();
      }
      @Override
      public Adapter caseExpression(Expression object)
      {
        return createExpressionAdapter();
      }
      @Override
      public Adapter caseEnvironment(Environment object)
      {
        return createEnvironmentAdapter();
      }
      @Override
      public Adapter caseEnvironmentDefinition(EnvironmentDefinition object)
      {
        return createEnvironmentDefinitionAdapter();
      }
      @Override
      public Adapter caseComponentDefinition(ComponentDefinition object)
      {
        return createComponentDefinitionAdapter();
      }
      @Override
      public Adapter caseLRef(LRef object)
      {
        return createLRefAdapter();
      }
      @Override
      public Adapter caseFuncParam(FuncParam object)
      {
        return createFuncParamAdapter();
      }
      @Override
      public Adapter caseFuncDefinition(FuncDefinition object)
      {
        return createFuncDefinitionAdapter();
      }
      @Override
      public Adapter caseFuncBlock(FuncBlock object)
      {
        return createFuncBlockAdapter();
      }
      @Override
      public Adapter caseFuncStatement(FuncStatement object)
      {
        return createFuncStatementAdapter();
      }
      @Override
      public Adapter caseFuncVarDeclaration(FuncVarDeclaration object)
      {
        return createFuncVarDeclarationAdapter();
      }
      @Override
      public Adapter caseFuncVarAssign(FuncVarAssign object)
      {
        return createFuncVarAssignAdapter();
      }
      @Override
      public Adapter caseFuncIfElse(FuncIfElse object)
      {
        return createFuncIfElseAdapter();
      }
      @Override
      public Adapter caseFuncReturn(FuncReturn object)
      {
        return createFuncReturnAdapter();
      }
      @Override
      public Adapter caseNegativeIntConstant(NegativeIntConstant object)
      {
        return createNegativeIntConstantAdapter();
      }
      @Override
      public Adapter caseIntConstant(IntConstant object)
      {
        return createIntConstantAdapter();
      }
      @Override
      public Adapter caseStringConstant(StringConstant object)
      {
        return createStringConstantAdapter();
      }
      @Override
      public Adapter caseBoolConstant(BoolConstant object)
      {
        return createBoolConstantAdapter();
      }
      @Override
      public Adapter caseOr(Or object)
      {
        return createOrAdapter();
      }
      @Override
      public Adapter caseAnd(And object)
      {
        return createAndAdapter();
      }
      @Override
      public Adapter caseEquality(Equality object)
      {
        return createEqualityAdapter();
      }
      @Override
      public Adapter caseComparison(Comparison object)
      {
        return createComparisonAdapter();
      }
      @Override
      public Adapter casePlus(Plus object)
      {
        return createPlusAdapter();
      }
      @Override
      public Adapter caseMinus(Minus object)
      {
        return createMinusAdapter();
      }
      @Override
      public Adapter caseConcatenate(Concatenate object)
      {
        return createConcatenateAdapter();
      }
      @Override
      public Adapter caseMulOrDiv(MulOrDiv object)
      {
        return createMulOrDivAdapter();
      }
      @Override
      public Adapter caseUnaryMinus(UnaryMinus object)
      {
        return createUnaryMinusAdapter();
      }
      @Override
      public Adapter caseNot(Not object)
      {
        return createNotAdapter();
      }
      @Override
      public Adapter caseLocalVarRef(LocalVarRef object)
      {
        return createLocalVarRefAdapter();
      }
      @Override
      public Adapter caseLocalAttributeRef(LocalAttributeRef object)
      {
        return createLocalAttributeRefAdapter();
      }
      @Override
      public Adapter caseFunctionCall(FunctionCall object)
      {
        return createFunctionCallAdapter();
      }
      @Override
      public Adapter caseComponentAttributeRef(ComponentAttributeRef object)
      {
        return createComponentAttributeRefAdapter();
      }
      @Override
      public Adapter caseRecAttributeRef(RecAttributeRef object)
      {
        return createRecAttributeRefAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.Model
   * @generated
   */
  public Adapter createModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ProcessDefinition <em>Process Definition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ProcessDefinition
   * @generated
   */
  public Adapter createProcessDefinitionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ProcessBlock <em>Process Block</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ProcessBlock
   * @generated
   */
  public Adapter createProcessBlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ProcessSpawn <em>Process Spawn</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ProcessSpawn
   * @generated
   */
  public Adapter createProcessSpawnAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ProcessCall <em>Process Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ProcessCall
   * @generated
   */
  public Adapter createProcessCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ProcessStatement <em>Process Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ProcessStatement
   * @generated
   */
  public Adapter createProcessStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ProcessSend <em>Process Send</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ProcessSend
   * @generated
   */
  public Adapter createProcessSendAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ProcessReceive <em>Process Receive</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ProcessReceive
   * @generated
   */
  public Adapter createProcessReceiveAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ProcessReceiveSingle <em>Process Receive Single</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ProcessReceiveSingle
   * @generated
   */
  public Adapter createProcessReceiveSingleAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ProcessReceiveMultiple <em>Process Receive Multiple</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ProcessReceiveMultiple
   * @generated
   */
  public Adapter createProcessReceiveMultipleAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ReceiveCase <em>Receive Case</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ReceiveCase
   * @generated
   */
  public Adapter createReceiveCaseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ProcessIf <em>Process If</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ProcessIf
   * @generated
   */
  public Adapter createProcessIfAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ProcessThenBlock <em>Process Then Block</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ProcessThenBlock
   * @generated
   */
  public Adapter createProcessThenBlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ProcessSet <em>Process Set</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ProcessSet
   * @generated
   */
  public Adapter createProcessSetAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ProcessWaitFor <em>Process Wait For</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ProcessWaitFor
   * @generated
   */
  public Adapter createProcessWaitForAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ProcessLoop <em>Process Loop</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ProcessLoop
   * @generated
   */
  public Adapter createProcessLoopAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.Update <em>Update</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.Update
   * @generated
   */
  public Adapter createUpdateAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.UpdateComponentAttribute <em>Update Component Attribute</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.UpdateComponentAttribute
   * @generated
   */
  public Adapter createUpdateComponentAttributeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.UpdateLocalAttribute <em>Update Local Attribute</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.UpdateLocalAttribute
   * @generated
   */
  public Adapter createUpdateLocalAttributeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.PrintStatement <em>Print Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.PrintStatement
   * @generated
   */
  public Adapter createPrintStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.PrintAllStatement <em>Print All Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.PrintAllStatement
   * @generated
   */
  public Adapter createPrintAllStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.PrintFormattedStatement <em>Print Formatted Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.PrintFormattedStatement
   * @generated
   */
  public Adapter createPrintFormattedStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.Expression
   * @generated
   */
  public Adapter createExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.Environment <em>Environment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.Environment
   * @generated
   */
  public Adapter createEnvironmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.EnvironmentDefinition <em>Environment Definition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.EnvironmentDefinition
   * @generated
   */
  public Adapter createEnvironmentDefinitionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ComponentDefinition <em>Component Definition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ComponentDefinition
   * @generated
   */
  public Adapter createComponentDefinitionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.LRef <em>LRef</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.LRef
   * @generated
   */
  public Adapter createLRefAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.FuncParam <em>Func Param</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.FuncParam
   * @generated
   */
  public Adapter createFuncParamAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.FuncDefinition <em>Func Definition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.FuncDefinition
   * @generated
   */
  public Adapter createFuncDefinitionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.FuncBlock <em>Func Block</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.FuncBlock
   * @generated
   */
  public Adapter createFuncBlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.FuncStatement <em>Func Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.FuncStatement
   * @generated
   */
  public Adapter createFuncStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.FuncVarDeclaration <em>Func Var Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.FuncVarDeclaration
   * @generated
   */
  public Adapter createFuncVarDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.FuncVarAssign <em>Func Var Assign</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.FuncVarAssign
   * @generated
   */
  public Adapter createFuncVarAssignAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.FuncIfElse <em>Func If Else</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.FuncIfElse
   * @generated
   */
  public Adapter createFuncIfElseAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.FuncReturn <em>Func Return</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.FuncReturn
   * @generated
   */
  public Adapter createFuncReturnAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.NegativeIntConstant <em>Negative Int Constant</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.NegativeIntConstant
   * @generated
   */
  public Adapter createNegativeIntConstantAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.IntConstant <em>Int Constant</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.IntConstant
   * @generated
   */
  public Adapter createIntConstantAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.StringConstant <em>String Constant</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.StringConstant
   * @generated
   */
  public Adapter createStringConstantAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.BoolConstant <em>Bool Constant</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.BoolConstant
   * @generated
   */
  public Adapter createBoolConstantAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.Or <em>Or</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.Or
   * @generated
   */
  public Adapter createOrAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.And <em>And</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.And
   * @generated
   */
  public Adapter createAndAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.Equality <em>Equality</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.Equality
   * @generated
   */
  public Adapter createEqualityAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.Comparison <em>Comparison</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.Comparison
   * @generated
   */
  public Adapter createComparisonAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.Plus <em>Plus</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.Plus
   * @generated
   */
  public Adapter createPlusAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.Minus <em>Minus</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.Minus
   * @generated
   */
  public Adapter createMinusAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.Concatenate <em>Concatenate</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.Concatenate
   * @generated
   */
  public Adapter createConcatenateAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.MulOrDiv <em>Mul Or Div</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.MulOrDiv
   * @generated
   */
  public Adapter createMulOrDivAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.UnaryMinus <em>Unary Minus</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.UnaryMinus
   * @generated
   */
  public Adapter createUnaryMinusAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.Not <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.Not
   * @generated
   */
  public Adapter createNotAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.LocalVarRef <em>Local Var Ref</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.LocalVarRef
   * @generated
   */
  public Adapter createLocalVarRefAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.LocalAttributeRef <em>Local Attribute Ref</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.LocalAttributeRef
   * @generated
   */
  public Adapter createLocalAttributeRefAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.FunctionCall <em>Function Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.FunctionCall
   * @generated
   */
  public Adapter createFunctionCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.ComponentAttributeRef <em>Component Attribute Ref</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.ComponentAttributeRef
   * @generated
   */
  public Adapter createComponentAttributeRefAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sysma.goat.eclipse_plugin.goatComponents.RecAttributeRef <em>Rec Attribute Ref</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.sysma.goat.eclipse_plugin.goatComponents.RecAttributeRef
   * @generated
   */
  public Adapter createRecAttributeRefAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //GoatComponentsAdapterFactory
