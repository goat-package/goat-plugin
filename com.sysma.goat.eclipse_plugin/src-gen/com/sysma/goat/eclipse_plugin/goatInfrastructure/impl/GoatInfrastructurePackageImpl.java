/**
 * generated by Xtext 2.12.0
 */
package com.sysma.goat.eclipse_plugin.goatInfrastructure.impl;

import com.sysma.goat.eclipse_plugin.goatInfrastructure.Cluster;
import com.sysma.goat.eclipse_plugin.goatInfrastructure.GoatInfrastructureFactory;
import com.sysma.goat.eclipse_plugin.goatInfrastructure.GoatInfrastructurePackage;
import com.sysma.goat.eclipse_plugin.goatInfrastructure.Infrastructure;
import com.sysma.goat.eclipse_plugin.goatInfrastructure.Ring;
import com.sysma.goat.eclipse_plugin.goatInfrastructure.SingleServer;
import com.sysma.goat.eclipse_plugin.goatInfrastructure.Tree;
import com.sysma.goat.eclipse_plugin.goatInfrastructure.TreeNode;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class GoatInfrastructurePackageImpl extends EPackageImpl implements GoatInfrastructurePackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass infrastructureEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass singleServerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass clusterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass treeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass treeNodeEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see com.sysma.goat.eclipse_plugin.goatInfrastructure.GoatInfrastructurePackage#eNS_URI
   * @see #init()
   * @generated
   */
  private GoatInfrastructurePackageImpl()
  {
    super(eNS_URI, GoatInfrastructureFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link GoatInfrastructurePackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static GoatInfrastructurePackage init()
  {
    if (isInited) return (GoatInfrastructurePackage)EPackage.Registry.INSTANCE.getEPackage(GoatInfrastructurePackage.eNS_URI);

    // Obtain or create and register package
    GoatInfrastructurePackageImpl theGoatInfrastructurePackage = (GoatInfrastructurePackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof GoatInfrastructurePackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new GoatInfrastructurePackageImpl());

    isInited = true;

    // Create package meta-data objects
    theGoatInfrastructurePackage.createPackageContents();

    // Initialize created meta-data
    theGoatInfrastructurePackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theGoatInfrastructurePackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(GoatInfrastructurePackage.eNS_URI, theGoatInfrastructurePackage);
    return theGoatInfrastructurePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInfrastructure()
  {
    return infrastructureEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInfrastructure_Name()
  {
    return (EAttribute)infrastructureEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSingleServer()
  {
    return singleServerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSingleServer_Server()
  {
    return (EAttribute)singleServerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSingleServer_Timeout()
  {
    return (EAttribute)singleServerEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCluster()
  {
    return clusterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCluster_Message_queue()
  {
    return (EAttribute)clusterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCluster_Registration()
  {
    return (EAttribute)clusterEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCluster_Mid_assigner()
  {
    return (EAttribute)clusterEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCluster_Nodes()
  {
    return (EAttribute)clusterEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRing()
  {
    return ringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRing_Registration()
  {
    return (EAttribute)ringEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRing_Mid_assigner()
  {
    return (EAttribute)ringEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getRing_Nodes()
  {
    return (EAttribute)ringEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTree()
  {
    return treeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTree_Registration()
  {
    return (EAttribute)treeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTree_Root()
  {
    return (EReference)treeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTreeNode()
  {
    return treeNodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTreeNode_Address()
  {
    return (EAttribute)treeNodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTreeNode_Children()
  {
    return (EReference)treeNodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GoatInfrastructureFactory getGoatInfrastructureFactory()
  {
    return (GoatInfrastructureFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    infrastructureEClass = createEClass(INFRASTRUCTURE);
    createEAttribute(infrastructureEClass, INFRASTRUCTURE__NAME);

    singleServerEClass = createEClass(SINGLE_SERVER);
    createEAttribute(singleServerEClass, SINGLE_SERVER__SERVER);
    createEAttribute(singleServerEClass, SINGLE_SERVER__TIMEOUT);

    clusterEClass = createEClass(CLUSTER);
    createEAttribute(clusterEClass, CLUSTER__MESSAGE_QUEUE);
    createEAttribute(clusterEClass, CLUSTER__REGISTRATION);
    createEAttribute(clusterEClass, CLUSTER__MID_ASSIGNER);
    createEAttribute(clusterEClass, CLUSTER__NODES);

    ringEClass = createEClass(RING);
    createEAttribute(ringEClass, RING__REGISTRATION);
    createEAttribute(ringEClass, RING__MID_ASSIGNER);
    createEAttribute(ringEClass, RING__NODES);

    treeEClass = createEClass(TREE);
    createEAttribute(treeEClass, TREE__REGISTRATION);
    createEReference(treeEClass, TREE__ROOT);

    treeNodeEClass = createEClass(TREE_NODE);
    createEAttribute(treeNodeEClass, TREE_NODE__ADDRESS);
    createEReference(treeNodeEClass, TREE_NODE__CHILDREN);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    singleServerEClass.getESuperTypes().add(this.getInfrastructure());
    clusterEClass.getESuperTypes().add(this.getInfrastructure());
    ringEClass.getESuperTypes().add(this.getInfrastructure());
    treeEClass.getESuperTypes().add(this.getInfrastructure());

    // Initialize classes and features; add operations and parameters
    initEClass(infrastructureEClass, Infrastructure.class, "Infrastructure", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getInfrastructure_Name(), ecorePackage.getEString(), "name", null, 0, 1, Infrastructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(singleServerEClass, SingleServer.class, "SingleServer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSingleServer_Server(), ecorePackage.getEString(), "server", null, 0, 1, SingleServer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSingleServer_Timeout(), ecorePackage.getEInt(), "timeout", null, 0, 1, SingleServer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(clusterEClass, Cluster.class, "Cluster", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCluster_Message_queue(), ecorePackage.getEString(), "message_queue", null, 0, 1, Cluster.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCluster_Registration(), ecorePackage.getEString(), "registration", null, 0, 1, Cluster.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCluster_Mid_assigner(), ecorePackage.getEString(), "mid_assigner", null, 0, 1, Cluster.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCluster_Nodes(), ecorePackage.getEString(), "nodes", null, 0, -1, Cluster.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ringEClass, Ring.class, "Ring", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRing_Registration(), ecorePackage.getEString(), "registration", null, 0, 1, Ring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRing_Mid_assigner(), ecorePackage.getEString(), "mid_assigner", null, 0, 1, Ring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRing_Nodes(), ecorePackage.getEString(), "nodes", null, 0, -1, Ring.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(treeEClass, Tree.class, "Tree", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTree_Registration(), ecorePackage.getEString(), "registration", null, 0, 1, Tree.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTree_Root(), this.getTreeNode(), null, "root", null, 0, 1, Tree.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(treeNodeEClass, TreeNode.class, "TreeNode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTreeNode_Address(), ecorePackage.getEString(), "address", null, 0, 1, TreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTreeNode_Children(), this.getTreeNode(), null, "children", null, 0, -1, TreeNode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //GoatInfrastructurePackageImpl
